{
	"id": 0,
	"name": "@raycast/api",
	"kind": 0,
	"kindString": "Project",
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 73,
			"name": "ActionPanel",
			"kind": 2,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 78,
					"name": "Item",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 89,
							"name": "ActionPanelItem"
						}
					}
				},
				{
					"id": 79,
					"name": "Section",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 81,
							"name": "ActionPanelSection"
						}
					}
				},
				{
					"id": 80,
					"name": "Submenu",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 116,
							"name": "ActionPanelSubmenu"
						}
					}
				},
				{
					"id": 77,
					"name": "displayName",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 74,
					"name": "propTypes",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 75,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 76,
									"name": "title",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										76
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						78,
						79,
						80,
						77,
						74
					]
				}
			]
		},
		{
			"id": 92,
			"name": "ActionPanelItem",
			"kind": 2,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 115,
					"name": "displayName",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 93,
					"name": "propTypes",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 94,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 97,
									"name": "icon",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 98,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 99,
																					"name": "fileIcon",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"typeArguments": [
																							{
																								"type": "intrinsic",
																								"name": "string"
																							}
																						],
																						"name": "Requireable"
																					},
																					"defaultValue": "..."
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						99
																					]
																				}
																			]
																		}
																	}
																],
																"name": "InferProps"
															}
														],
														"name": "Required"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 100,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 105,
																					"name": "mask",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"typeArguments": [
																							{
																								"type": "reference",
																								"name": "ImageMask"
																							}
																						],
																						"name": "Requireable"
																					},
																					"defaultValue": "..."
																				},
																				{
																					"id": 101,
																					"name": "source",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"typeArguments": [
																							{
																								"type": "union",
																								"types": [
																									{
																										"type": "intrinsic",
																										"name": "string"
																									},
																									{
																										"type": "reference",
																										"typeArguments": [
																											{
																												"type": "reflection",
																												"declaration": {
																													"id": 102,
																													"name": "__type",
																													"kind": 65536,
																													"kindString": "Type literal",
																													"flags": {},
																													"children": [
																														{
																															"id": 104,
																															"name": "dark",
																															"kind": 1024,
																															"kindString": "Property",
																															"flags": {},
																															"type": {
																																"type": "reference",
																																"typeArguments": [
																																	{
																																		"type": "intrinsic",
																																		"name": "string"
																																	}
																																],
																																"name": "Validator"
																															},
																															"defaultValue": "..."
																														},
																														{
																															"id": 103,
																															"name": "light",
																															"kind": 1024,
																															"kindString": "Property",
																															"flags": {},
																															"type": {
																																"type": "reference",
																																"typeArguments": [
																																	{
																																		"type": "intrinsic",
																																		"name": "string"
																																	}
																																],
																																"name": "Validator"
																															},
																															"defaultValue": "..."
																														}
																													],
																													"groups": [
																														{
																															"title": "Properties",
																															"kind": 1024,
																															"children": [
																																104,
																																103
																															]
																														}
																													]
																												}
																											}
																										],
																										"name": "InferProps"
																									}
																								]
																							}
																						],
																						"name": "Requireable"
																					},
																					"defaultValue": "..."
																				},
																				{
																					"id": 106,
																					"name": "tintColor",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"typeArguments": [
																							{
																								"type": "intrinsic",
																								"name": "string"
																							}
																						],
																						"name": "Requireable"
																					},
																					"defaultValue": "..."
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						105,
																						101,
																						106
																					]
																				}
																			]
																		}
																	}
																],
																"name": "InferProps"
															}
														],
														"name": "Required"
													}
												]
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 95,
									"name": "id",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 111,
									"name": "onAction",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 112,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 113,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 114,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													]
												}
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 107,
									"name": "shortcut",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 108,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 110,
																			"name": "key",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				],
																				"name": "Validator"
																			},
																			"defaultValue": "..."
																		},
																		{
																			"id": 109,
																			"name": "modifiers",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"typeArguments": [
																					{
																						"type": "array",
																						"elementType": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "undefined"
																								},
																								{
																									"type": "literal",
																									"value": null
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							]
																						}
																					}
																				],
																				"name": "Validator"
																			},
																			"defaultValue": "..."
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"kind": 1024,
																			"children": [
																				110,
																				109
																			]
																		}
																	]
																}
															}
														],
														"name": "InferProps"
													}
												],
												"name": "Required"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 96,
									"name": "title",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Validator"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										97,
										95,
										111,
										107,
										96
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						115,
						93
					]
				}
			]
		},
		{
			"id": 84,
			"name": "ActionPanelSection",
			"kind": 2,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 88,
					"name": "displayName",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 85,
					"name": "propTypes",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 86,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 87,
									"name": "title",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										87
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						88,
						85
					]
				}
			]
		},
		{
			"id": 119,
			"name": "ActionPanelSubmenu",
			"kind": 2,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 138,
					"name": "displayName",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 120,
					"name": "propTypes",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 121,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 124,
									"name": "icon",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 125,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 126,
																					"name": "fileIcon",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"typeArguments": [
																							{
																								"type": "intrinsic",
																								"name": "string"
																							}
																						],
																						"name": "Requireable"
																					},
																					"defaultValue": "..."
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						126
																					]
																				}
																			]
																		}
																	}
																],
																"name": "InferProps"
															}
														],
														"name": "Required"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 127,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 132,
																					"name": "mask",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"typeArguments": [
																							{
																								"type": "reference",
																								"name": "ImageMask"
																							}
																						],
																						"name": "Requireable"
																					},
																					"defaultValue": "..."
																				},
																				{
																					"id": 128,
																					"name": "source",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"typeArguments": [
																							{
																								"type": "union",
																								"types": [
																									{
																										"type": "intrinsic",
																										"name": "string"
																									},
																									{
																										"type": "reference",
																										"typeArguments": [
																											{
																												"type": "reflection",
																												"declaration": {
																													"id": 129,
																													"name": "__type",
																													"kind": 65536,
																													"kindString": "Type literal",
																													"flags": {},
																													"children": [
																														{
																															"id": 131,
																															"name": "dark",
																															"kind": 1024,
																															"kindString": "Property",
																															"flags": {},
																															"type": {
																																"type": "reference",
																																"typeArguments": [
																																	{
																																		"type": "intrinsic",
																																		"name": "string"
																																	}
																																],
																																"name": "Validator"
																															},
																															"defaultValue": "..."
																														},
																														{
																															"id": 130,
																															"name": "light",
																															"kind": 1024,
																															"kindString": "Property",
																															"flags": {},
																															"type": {
																																"type": "reference",
																																"typeArguments": [
																																	{
																																		"type": "intrinsic",
																																		"name": "string"
																																	}
																																],
																																"name": "Validator"
																															},
																															"defaultValue": "..."
																														}
																													],
																													"groups": [
																														{
																															"title": "Properties",
																															"kind": 1024,
																															"children": [
																																131,
																																130
																															]
																														}
																													]
																												}
																											}
																										],
																										"name": "InferProps"
																									}
																								]
																							}
																						],
																						"name": "Requireable"
																					},
																					"defaultValue": "..."
																				},
																				{
																					"id": 133,
																					"name": "tintColor",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"typeArguments": [
																							{
																								"type": "intrinsic",
																								"name": "string"
																							}
																						],
																						"name": "Requireable"
																					},
																					"defaultValue": "..."
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						132,
																						128,
																						133
																					]
																				}
																			]
																		}
																	}
																],
																"name": "InferProps"
															}
														],
														"name": "Required"
													}
												]
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 122,
									"name": "id",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 134,
									"name": "shortcut",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 135,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 137,
																			"name": "key",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				],
																				"name": "Validator"
																			},
																			"defaultValue": "..."
																		},
																		{
																			"id": 136,
																			"name": "modifiers",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"typeArguments": [
																					{
																						"type": "array",
																						"elementType": {
																							"type": "union",
																							"types": [
																								{
																									"type": "intrinsic",
																									"name": "undefined"
																								},
																								{
																									"type": "literal",
																									"value": null
																								},
																								{
																									"type": "intrinsic",
																									"name": "string"
																								}
																							]
																						}
																					}
																				],
																				"name": "Validator"
																			},
																			"defaultValue": "..."
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"kind": 1024,
																			"children": [
																				137,
																				136
																			]
																		}
																	]
																}
															}
														],
														"name": "InferProps"
													}
												],
												"name": "Required"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 123,
									"name": "title",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Validator"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										124,
										122,
										134,
										123
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						138,
						120
					]
				}
			]
		},
		{
			"id": 163,
			"name": "Detail",
			"kind": 2,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 169,
					"name": "displayName",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 164,
					"name": "propTypes",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 165,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 167,
									"name": "isLoading",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 168,
									"name": "markdown",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 166,
									"name": "navigationTitle",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										167,
										168,
										166
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						169,
						164
					]
				}
			]
		},
		{
			"id": 180,
			"name": "Form",
			"kind": 2,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 193,
					"name": "Checkbox",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 235,
							"name": "FormCheckbox"
						}
					}
				},
				{
					"id": 194,
					"name": "DatePicker",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 252,
							"name": "FormDatePicker"
						}
					}
				},
				{
					"id": 196,
					"name": "Dropdown",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 273,
							"name": "FormDropdown"
						}
					}
				},
				{
					"id": 198,
					"name": "DropdownItem",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 299,
							"name": "FormDropdownItem"
						}
					}
				},
				{
					"id": 197,
					"name": "DropdownSection",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 291,
							"name": "FormDropdownSection"
						}
					}
				},
				{
					"id": 195,
					"name": "Separator",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 269,
							"name": "FormSeparator"
						}
					}
				},
				{
					"id": 199,
					"name": "TagPicker",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 318,
							"name": "FormTagPicker"
						}
					}
				},
				{
					"id": 200,
					"name": "TagPickerItem",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 336,
							"name": "FormTagPickerItem"
						}
					}
				},
				{
					"id": 192,
					"name": "TextArea",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 218,
							"name": "FormTextArea"
						}
					}
				},
				{
					"id": 191,
					"name": "TextField",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 201,
							"name": "FormTextField"
						}
					}
				},
				{
					"id": 190,
					"name": "displayName",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 181,
					"name": "propTypes",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 182,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 185,
									"name": "isLoading",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 184,
									"name": "navigationTitle",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 186,
									"name": "onSubmit",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 187,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 188,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 189,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													]
												}
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 183,
									"name": "submitTitle",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										185,
										184,
										186,
										183
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						193,
						194,
						196,
						198,
						197,
						195,
						199,
						200,
						192,
						191,
						190,
						181
					]
				}
			]
		},
		{
			"id": 238,
			"name": "FormCheckbox",
			"kind": 2,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 251,
					"name": "displayName",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 239,
					"name": "propTypes",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 240,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 245,
									"name": "defaultValue",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 241,
									"name": "id",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Validator"
									},
									"defaultValue": "..."
								},
								{
									"id": 246,
									"name": "label",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 247,
									"name": "onChange",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 248,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 249,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 250,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													]
												}
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 243,
									"name": "storeValue",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 242,
									"name": "title",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 244,
									"name": "value",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										245,
										241,
										246,
										247,
										243,
										242,
										244
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						251,
						239
					]
				}
			]
		},
		{
			"id": 255,
			"name": "FormDatePicker",
			"kind": 2,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 268,
					"name": "displayName",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 256,
					"name": "propTypes",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 257,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 263,
									"name": "dateFormat",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 262,
									"name": "defaultValue",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 258,
									"name": "id",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Validator"
									},
									"defaultValue": "..."
								},
								{
									"id": 264,
									"name": "onChange",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 265,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 266,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 267,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													]
												}
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 260,
									"name": "storeValue",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 259,
									"name": "title",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 261,
									"name": "value",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										263,
										262,
										258,
										264,
										260,
										259,
										261
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						268,
						256
					]
				}
			]
		},
		{
			"id": 276,
			"name": "FormDropdown",
			"kind": 2,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 290,
					"name": "Item",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 299,
							"name": "FormDropdownItem"
						}
					}
				},
				{
					"id": 289,
					"name": "Section",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 291,
							"name": "FormDropdownSection"
						}
					}
				},
				{
					"id": 288,
					"name": "displayName",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 277,
					"name": "propTypes",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 278,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 283,
									"name": "defaultValue",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 279,
									"name": "id",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Validator"
									},
									"defaultValue": "..."
								},
								{
									"id": 284,
									"name": "onChange",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 285,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 286,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 287,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													]
												}
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 281,
									"name": "storeValue",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 280,
									"name": "title",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 282,
									"name": "value",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										283,
										279,
										284,
										281,
										280,
										282
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						290,
						289,
						288,
						277
					]
				}
			]
		},
		{
			"id": 302,
			"name": "FormDropdownItem",
			"kind": 2,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 317,
					"name": "displayName",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 303,
					"name": "propTypes",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 304,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 307,
									"name": "icon",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 308,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 309,
																					"name": "fileIcon",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"typeArguments": [
																							{
																								"type": "intrinsic",
																								"name": "string"
																							}
																						],
																						"name": "Requireable"
																					},
																					"defaultValue": "..."
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						309
																					]
																				}
																			]
																		}
																	}
																],
																"name": "InferProps"
															}
														],
														"name": "Required"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 310,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 315,
																					"name": "mask",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"typeArguments": [
																							{
																								"type": "reference",
																								"name": "ImageMask"
																							}
																						],
																						"name": "Requireable"
																					},
																					"defaultValue": "..."
																				},
																				{
																					"id": 311,
																					"name": "source",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"typeArguments": [
																							{
																								"type": "union",
																								"types": [
																									{
																										"type": "intrinsic",
																										"name": "string"
																									},
																									{
																										"type": "reference",
																										"typeArguments": [
																											{
																												"type": "reflection",
																												"declaration": {
																													"id": 312,
																													"name": "__type",
																													"kind": 65536,
																													"kindString": "Type literal",
																													"flags": {},
																													"children": [
																														{
																															"id": 314,
																															"name": "dark",
																															"kind": 1024,
																															"kindString": "Property",
																															"flags": {},
																															"type": {
																																"type": "reference",
																																"typeArguments": [
																																	{
																																		"type": "intrinsic",
																																		"name": "string"
																																	}
																																],
																																"name": "Validator"
																															},
																															"defaultValue": "..."
																														},
																														{
																															"id": 313,
																															"name": "light",
																															"kind": 1024,
																															"kindString": "Property",
																															"flags": {},
																															"type": {
																																"type": "reference",
																																"typeArguments": [
																																	{
																																		"type": "intrinsic",
																																		"name": "string"
																																	}
																																],
																																"name": "Validator"
																															},
																															"defaultValue": "..."
																														}
																													],
																													"groups": [
																														{
																															"title": "Properties",
																															"kind": 1024,
																															"children": [
																																314,
																																313
																															]
																														}
																													]
																												}
																											}
																										],
																										"name": "InferProps"
																									}
																								]
																							}
																						],
																						"name": "Requireable"
																					},
																					"defaultValue": "..."
																				},
																				{
																					"id": 316,
																					"name": "tintColor",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"typeArguments": [
																							{
																								"type": "intrinsic",
																								"name": "string"
																							}
																						],
																						"name": "Requireable"
																					},
																					"defaultValue": "..."
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						315,
																						311,
																						316
																					]
																				}
																			]
																		}
																	}
																],
																"name": "InferProps"
															}
														],
														"name": "Required"
													}
												]
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 306,
									"name": "title",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Validator"
									},
									"defaultValue": "..."
								},
								{
									"id": 305,
									"name": "value",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										307,
										306,
										305
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						317,
						303
					]
				}
			]
		},
		{
			"id": 294,
			"name": "FormDropdownSection",
			"kind": 2,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 298,
					"name": "displayName",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 295,
					"name": "propTypes",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 296,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 297,
									"name": "title",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										297
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						298,
						295
					]
				}
			]
		},
		{
			"id": 271,
			"name": "FormSeparator",
			"kind": 2,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 272,
					"name": "displayName",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						272
					]
				}
			]
		},
		{
			"id": 321,
			"name": "FormTagPicker",
			"kind": 2,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 335,
					"name": "Item",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 336,
							"name": "FormTagPickerItem"
						}
					}
				},
				{
					"id": 334,
					"name": "displayName",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 322,
					"name": "propTypes",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 323,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 329,
									"name": "defaultValue",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "undefined"
														},
														{
															"type": "literal",
															"value": null
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													]
												}
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 324,
									"name": "id",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Validator"
									},
									"defaultValue": "..."
								},
								{
									"id": 330,
									"name": "onChange",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 331,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 332,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 333,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													]
												}
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 327,
									"name": "placeholder",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 326,
									"name": "storeValue",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 325,
									"name": "title",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 328,
									"name": "value",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "undefined"
														},
														{
															"type": "literal",
															"value": null
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													]
												}
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										329,
										324,
										330,
										327,
										326,
										325,
										328
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						335,
						334,
						322
					]
				}
			]
		},
		{
			"id": 339,
			"name": "FormTagPickerItem",
			"kind": 2,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 354,
					"name": "displayName",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 340,
					"name": "propTypes",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 341,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 344,
									"name": "icon",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 345,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 346,
																					"name": "fileIcon",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"typeArguments": [
																							{
																								"type": "intrinsic",
																								"name": "string"
																							}
																						],
																						"name": "Requireable"
																					},
																					"defaultValue": "..."
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						346
																					]
																				}
																			]
																		}
																	}
																],
																"name": "InferProps"
															}
														],
														"name": "Required"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 347,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 352,
																					"name": "mask",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"typeArguments": [
																							{
																								"type": "reference",
																								"name": "ImageMask"
																							}
																						],
																						"name": "Requireable"
																					},
																					"defaultValue": "..."
																				},
																				{
																					"id": 348,
																					"name": "source",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"typeArguments": [
																							{
																								"type": "union",
																								"types": [
																									{
																										"type": "intrinsic",
																										"name": "string"
																									},
																									{
																										"type": "reference",
																										"typeArguments": [
																											{
																												"type": "reflection",
																												"declaration": {
																													"id": 349,
																													"name": "__type",
																													"kind": 65536,
																													"kindString": "Type literal",
																													"flags": {},
																													"children": [
																														{
																															"id": 351,
																															"name": "dark",
																															"kind": 1024,
																															"kindString": "Property",
																															"flags": {},
																															"type": {
																																"type": "reference",
																																"typeArguments": [
																																	{
																																		"type": "intrinsic",
																																		"name": "string"
																																	}
																																],
																																"name": "Validator"
																															},
																															"defaultValue": "..."
																														},
																														{
																															"id": 350,
																															"name": "light",
																															"kind": 1024,
																															"kindString": "Property",
																															"flags": {},
																															"type": {
																																"type": "reference",
																																"typeArguments": [
																																	{
																																		"type": "intrinsic",
																																		"name": "string"
																																	}
																																],
																																"name": "Validator"
																															},
																															"defaultValue": "..."
																														}
																													],
																													"groups": [
																														{
																															"title": "Properties",
																															"kind": 1024,
																															"children": [
																																351,
																																350
																															]
																														}
																													]
																												}
																											}
																										],
																										"name": "InferProps"
																									}
																								]
																							}
																						],
																						"name": "Requireable"
																					},
																					"defaultValue": "..."
																				},
																				{
																					"id": 353,
																					"name": "tintColor",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"typeArguments": [
																							{
																								"type": "intrinsic",
																								"name": "string"
																							}
																						],
																						"name": "Requireable"
																					},
																					"defaultValue": "..."
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						352,
																						348,
																						353
																					]
																				}
																			]
																		}
																	}
																],
																"name": "InferProps"
															}
														],
														"name": "Required"
													}
												]
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 343,
									"name": "title",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Validator"
									},
									"defaultValue": "..."
								},
								{
									"id": 342,
									"name": "value",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Validator"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										344,
										343,
										342
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						354,
						340
					]
				}
			]
		},
		{
			"id": 221,
			"name": "FormTextArea",
			"kind": 2,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 234,
					"name": "displayName",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 222,
					"name": "propTypes",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 223,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 228,
									"name": "defaultValue",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 224,
									"name": "id",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Validator"
									},
									"defaultValue": "..."
								},
								{
									"id": 230,
									"name": "onChange",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 231,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 232,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 233,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													]
												}
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 229,
									"name": "placeholder",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 226,
									"name": "storeValue",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 225,
									"name": "title",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 227,
									"name": "value",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										228,
										224,
										230,
										229,
										226,
										225,
										227
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						234,
						222
					]
				}
			]
		},
		{
			"id": 204,
			"name": "FormTextField",
			"kind": 2,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 217,
					"name": "displayName",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 205,
					"name": "propTypes",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 206,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 211,
									"name": "defaultValue",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 207,
									"name": "id",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Validator"
									},
									"defaultValue": "..."
								},
								{
									"id": 213,
									"name": "onChange",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 214,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 215,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 216,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													]
												}
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 212,
									"name": "placeholder",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 209,
									"name": "storeValue",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 208,
									"name": "title",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 210,
									"name": "value",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										211,
										207,
										213,
										212,
										209,
										208,
										210
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						217,
						205
					]
				}
			]
		},
		{
			"id": 68,
			"name": "GlobalActionPanel",
			"kind": 2,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 69,
					"name": "displayName",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						69
					]
				}
			]
		},
		{
			"id": 455,
			"name": "List",
			"kind": 2,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 470,
					"name": "Item",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 482,
							"name": "ListItem"
						}
					}
				},
				{
					"id": 471,
					"name": "Section",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 472,
							"name": "ListSection"
						}
					}
				},
				{
					"id": 469,
					"name": "displayName",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 456,
					"name": "propTypes",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 457,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 461,
									"name": "onSearchTextChange",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 462,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 463,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 464,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													]
												}
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 465,
									"name": "onSelectionChange",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 466,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 467,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 468,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													]
												}
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 459,
									"name": "searchBarPlaceholder",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 458,
									"name": "selectedItemId",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 460,
									"name": "throttle",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										461,
										465,
										459,
										458,
										460
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						470,
						471,
						469,
						456
					]
				}
			]
		},
		{
			"id": 485,
			"name": "ListItem",
			"kind": 2,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 503,
					"name": "displayName",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 486,
					"name": "propTypes",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 487,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 491,
									"name": "accessoryTitle",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 493,
									"name": "icon",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 494,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 495,
																					"name": "fileIcon",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"typeArguments": [
																							{
																								"type": "intrinsic",
																								"name": "string"
																							}
																						],
																						"name": "Requireable"
																					},
																					"defaultValue": "..."
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						495
																					]
																				}
																			]
																		}
																	}
																],
																"name": "InferProps"
															}
														],
														"name": "Required"
													},
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 496,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 501,
																					"name": "mask",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"typeArguments": [
																							{
																								"type": "reference",
																								"name": "ImageMask"
																							}
																						],
																						"name": "Requireable"
																					},
																					"defaultValue": "..."
																				},
																				{
																					"id": 497,
																					"name": "source",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"typeArguments": [
																							{
																								"type": "union",
																								"types": [
																									{
																										"type": "intrinsic",
																										"name": "string"
																									},
																									{
																										"type": "reference",
																										"typeArguments": [
																											{
																												"type": "reflection",
																												"declaration": {
																													"id": 498,
																													"name": "__type",
																													"kind": 65536,
																													"kindString": "Type literal",
																													"flags": {},
																													"children": [
																														{
																															"id": 500,
																															"name": "dark",
																															"kind": 1024,
																															"kindString": "Property",
																															"flags": {},
																															"type": {
																																"type": "reference",
																																"typeArguments": [
																																	{
																																		"type": "intrinsic",
																																		"name": "string"
																																	}
																																],
																																"name": "Validator"
																															},
																															"defaultValue": "..."
																														},
																														{
																															"id": 499,
																															"name": "light",
																															"kind": 1024,
																															"kindString": "Property",
																															"flags": {},
																															"type": {
																																"type": "reference",
																																"typeArguments": [
																																	{
																																		"type": "intrinsic",
																																		"name": "string"
																																	}
																																],
																																"name": "Validator"
																															},
																															"defaultValue": "..."
																														}
																													],
																													"groups": [
																														{
																															"title": "Properties",
																															"kind": 1024,
																															"children": [
																																500,
																																499
																															]
																														}
																													]
																												}
																											}
																										],
																										"name": "InferProps"
																									}
																								]
																							}
																						],
																						"name": "Requireable"
																					},
																					"defaultValue": "..."
																				},
																				{
																					"id": 502,
																					"name": "tintColor",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"typeArguments": [
																							{
																								"type": "intrinsic",
																								"name": "string"
																							}
																						],
																						"name": "Requireable"
																					},
																					"defaultValue": "..."
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						501,
																						497,
																						502
																					]
																				}
																			]
																		}
																	}
																],
																"name": "InferProps"
															}
														],
														"name": "Required"
													}
												]
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 488,
									"name": "id",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 492,
									"name": "keywords",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "undefined"
														},
														{
															"type": "literal",
															"value": null
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													]
												}
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 490,
									"name": "subtitle",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 489,
									"name": "title",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Validator"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										491,
										493,
										488,
										492,
										490,
										489
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						503,
						486
					]
				}
			]
		},
		{
			"id": 475,
			"name": "ListSection",
			"kind": 2,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 481,
					"name": "displayName",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 476,
					"name": "propTypes",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 477,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 478,
									"name": "id",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 480,
									"name": "subtitle",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								},
								{
									"id": 479,
									"name": "title",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Requireable"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										478,
										480,
										479
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						481,
						476
					]
				}
			]
		},
		{
			"id": 685,
			"name": "Color",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {},
			"comment": {
				"shortText": "The standard colors. Use this colors for consistency.",
				"tags": [
					{
						"tag": "remarks",
						"text": "\nThe colors adopt to light and dark theme.\n"
					},
					{
						"tag": "example",
						"text": "\n```typescript\nimport { Color, Icon, List } from \"@raycast/api\";\n\nexport default () => {\n return (\n <List>\n   <List.Item title=\"Blue\" icon={{ source: Icon.Circle, tintColor: Color.Blue }} />\n   <List.Item title=\"Green\" icon={{ source: Icon.Circle, tintColor: Color.Green }} />\n   <List.Item title=\"Brown\" icon={{ source: Icon.Circle, tintColor: Color.Brown }} />\n   <List.Item title=\"Magenta\" icon={{ source: Icon.Circle, tintColor: Color.Magenta }} />\n   <List.Item title=\"Orange\" icon={{ source: Icon.Circle, tintColor: Color.Orange }} />\n   <List.Item title=\"Purple\" icon={{ source: Icon.Circle, tintColor: Color.Purple }} />\n   <List.Item title=\"Red\" icon={{ source: Icon.Circle, tintColor: Color.Red }} />\n   <List.Item title=\"Yellow\" icon={{ source: Icon.Circle, tintColor: Color.Yellow }} />\n   <List.Item title=\"PrimaryText\" icon={{ source: Icon.Circle, tintColor: Color.PrimaryText }} />\n   <List.Item title=\"SecondaryText\" icon={{ source: Icon.Circle, tintColor: Color.SecondaryText }} />\n </List>\n );\n};\n```\n"
					},
					{
						"tag": "subcategory",
						"text": "Colors\n"
					}
				]
			},
			"children": [
				{
					"id": 686,
					"name": "Blue",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"raycast-blue\""
				},
				{
					"id": 687,
					"name": "Brown",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"raycast-brown\""
				},
				{
					"id": 688,
					"name": "Green",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"raycast-green\""
				},
				{
					"id": 689,
					"name": "Magenta",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"raycast-magenta\""
				},
				{
					"id": 690,
					"name": "Orange",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"raycast-orange\""
				},
				{
					"id": 694,
					"name": "PrimaryText",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"raycast-primary-text\""
				},
				{
					"id": 691,
					"name": "Purple",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"raycast-purple\""
				},
				{
					"id": 692,
					"name": "Red",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"raycast-red\""
				},
				{
					"id": 695,
					"name": "SecondaryText",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"raycast-secondary-text\""
				},
				{
					"id": 693,
					"name": "Yellow",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"raycast-yellow\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						686,
						687,
						688,
						689,
						690,
						694,
						691,
						692,
						695,
						693
					]
				}
			]
		},
		{
			"id": 700,
			"name": "Icon",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {},
			"comment": {
				"shortText": "List of built-in icons that can be used for actions or lists",
				"tags": [
					{
						"tag": "example",
						"text": "\n```typescript\nimport { Icon, List } from \"@raycast/api\";\n\nexport default () => {\n  return (\n    <List>\n      <List.Item title=\"Icon\" icon={Icon.Circle} />\n    </List>\n  );\n};\n```\n"
					},
					{
						"tag": "subcategory",
						"text": "Icons & Images\n"
					}
				]
			},
			"children": [
				{
					"id": 701,
					"name": "ArrowClockwise",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"arrow-clockwise-16\""
				},
				{
					"id": 702,
					"name": "ArrowRight",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"arrow-right-16\""
				},
				{
					"id": 703,
					"name": "Binoculars",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"binoculars-16\""
				},
				{
					"id": 704,
					"name": "Bubble",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"bubble-left-16\""
				},
				{
					"id": 705,
					"name": "Calendar",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"calendar-16\""
				},
				{
					"id": 706,
					"name": "Checkmark",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"checkmark-circle-16\""
				},
				{
					"id": 707,
					"name": "ChevronDown",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"chevron-down-16\""
				},
				{
					"id": 708,
					"name": "ChevronUp",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"chevron-up-16\""
				},
				{
					"id": 709,
					"name": "Circle",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"circle-16\""
				},
				{
					"id": 710,
					"name": "Clipboard",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"doc-on-clipboard-16\""
				},
				{
					"id": 711,
					"name": "Clock",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"clock-16\""
				},
				{
					"id": 712,
					"name": "Desktop",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"desktopcomputer-16\""
				},
				{
					"id": 713,
					"name": "Document",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"doc-16\""
				},
				{
					"id": 714,
					"name": "Dot",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"dot-16\""
				},
				{
					"id": 715,
					"name": "Download",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"square-and-arrow-down-16\""
				},
				{
					"id": 716,
					"name": "Envelope",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"envelope-16\""
				},
				{
					"id": 717,
					"name": "ExclamationMark",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"exclamation-mark-triangle-16\""
				},
				{
					"id": 718,
					"name": "Eye",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"eye-16\""
				},
				{
					"id": 719,
					"name": "EyeSlash",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"eye-slash-16\""
				},
				{
					"id": 720,
					"name": "Finder",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"finder-16\""
				},
				{
					"id": 721,
					"name": "Gear",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"gearshape-16\""
				},
				{
					"id": 722,
					"name": "Globe",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"globe-16\""
				},
				{
					"id": 723,
					"name": "Hammer",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"hammer-16\""
				},
				{
					"id": 724,
					"name": "LevelMeter",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"level-meter-16\""
				},
				{
					"id": 725,
					"name": "Link",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"link-16\""
				},
				{
					"id": 726,
					"name": "List",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"main-list-view-16\""
				},
				{
					"id": 727,
					"name": "MagnifyingGlass",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"magnifyingglass-16\""
				},
				{
					"id": 728,
					"name": "MemoryChip",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"memorychip-16\""
				},
				{
					"id": 729,
					"name": "Message",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"message-16\""
				},
				{
					"id": 730,
					"name": "Pencil",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"pencil-16\""
				},
				{
					"id": 731,
					"name": "Person",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"person-crop-circle-16\""
				},
				{
					"id": 732,
					"name": "Phone",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"phone-16\""
				},
				{
					"id": 733,
					"name": "Pin",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"pin-16\""
				},
				{
					"id": 734,
					"name": "Plus",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"plus-16\""
				},
				{
					"id": 742,
					"name": "QuesionMark",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"questionmark-circle-16\""
				},
				{
					"id": 735,
					"name": "Sidebar",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"sidebar-right-16\""
				},
				{
					"id": 736,
					"name": "SpeakerArrowDown",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"speaker-arrow-down-16\""
				},
				{
					"id": 737,
					"name": "SpeakerArrowUp",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"speaker-arrow-up-16\""
				},
				{
					"id": 738,
					"name": "SpeakerSlash",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"speaker-slash-16\""
				},
				{
					"id": 739,
					"name": "Star",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"star-16\""
				},
				{
					"id": 743,
					"name": "Terminal",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"terminal-16\""
				},
				{
					"id": 740,
					"name": "Text",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"text-alignleft-16\""
				},
				{
					"id": 741,
					"name": "TextDocument",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"doc-plaintext-16\""
				},
				{
					"id": 744,
					"name": "Trash",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"trash-16\""
				},
				{
					"id": 745,
					"name": "Upload",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"square-and-arrow-up-16\""
				},
				{
					"id": 746,
					"name": "Video",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"video-16\""
				},
				{
					"id": 747,
					"name": "Window",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"macwindow-16\""
				},
				{
					"id": 748,
					"name": "XmarkCircle",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"xmark-circle-16\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						701,
						702,
						703,
						704,
						705,
						706,
						707,
						708,
						709,
						710,
						711,
						712,
						713,
						714,
						715,
						716,
						717,
						718,
						719,
						720,
						721,
						722,
						723,
						724,
						725,
						726,
						727,
						728,
						729,
						730,
						731,
						732,
						733,
						734,
						742,
						735,
						736,
						737,
						738,
						739,
						743,
						740,
						741,
						744,
						745,
						746,
						747,
						748
					]
				}
			]
		},
		{
			"id": 760,
			"name": "ImageMask",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {},
			"comment": {
				"shortText": "Available masks that can be used to change the shape of an image.",
				"tags": [
					{
						"tag": "example",
						"text": "\n```typescript\nimport { ImageMask, List } from \"@raycast/api\";\n\nexport default () => {\n  return (\n    <List>\n      <List.Item title=\"Icon\" icon={{ source: \"https://raycast.com/uploads/avatar.png\", mask: ImageMask.Circle }} />\n    </List>\n  );\n};\n```\n"
					},
					{
						"tag": "subcategory",
						"text": "Icons & Images\n"
					}
				]
			},
			"children": [
				{
					"id": 761,
					"name": "Circle",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "Masks an image with a circle. Good to use for avatars."
					},
					"defaultValue": "\"circle\""
				},
				{
					"id": 762,
					"name": "RoundedRectangle",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"comment": {
						"shortText": "Masks an image with a rounded rectangle."
					},
					"defaultValue": "\"roundedRectangle\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						761,
						762
					]
				}
			]
		},
		{
			"id": 798,
			"name": "ToastStyle",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {},
			"comment": {
				"shortText": "Defines the visual style of the Toast.",
				"tags": [
					{
						"tag": "remarks",
						"text": "\nUse {@link ToastStyle.Success} for confirmations and {@link ToastStyle.Failure} for displaying errors.\nUse {@link ToastStyle.Animated} when your Toast should be shown until a process is completed.\nYou can hide it later by using {@link Toast.hide} or update the properties of an existing Toast.\n"
					},
					{
						"tag": "subcategory",
						"text": "Toast\n"
					}
				]
			},
			"children": [
				{
					"id": 801,
					"name": "Animated",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"ANIMATED\""
				},
				{
					"id": 800,
					"name": "Failure",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"FAILURE\""
				},
				{
					"id": 799,
					"name": "Success",
					"kind": 16,
					"kindString": "Enumeration member",
					"flags": {},
					"defaultValue": "\"SUCCESS\""
				}
			],
			"groups": [
				{
					"title": "Enumeration members",
					"kind": 16,
					"children": [
						801,
						800,
						799
					]
				}
			]
		},
		{
			"id": 771,
			"name": "Toast",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "A Toast with a certain style, title, and message.",
				"tags": [
					{
						"tag": "remarks",
						"text": "\nUse {@link showToast} as shortcut for creating and showing a Toast.\n"
					},
					{
						"tag": "example",
						"text": "\n```typescript\nimport { Toast, ToastStyle } from \"@raycast/api\";\nimport { setTimeout } from \"timers/promises\";\n\nexport default async () => {\n  const toast = new Toast({ style: ToastStyle.Animated, title: \"Uploading image\" });\n  await toast.show();\n\n  await setTimeout(1000);\n\n  toast.style = ToastStyle.Success;\n  toast.title = \"Uploaded image\";\n};\n```\n"
					},
					{
						"tag": "subcategory",
						"text": "Toast\n"
					}
				]
			},
			"children": [
				{
					"id": 772,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 773,
							"name": "new Toast",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 774,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 794,
										"name": "ToastOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 771,
								"name": "Toast"
							}
						}
					]
				},
				{
					"id": 784,
					"name": "message",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 785,
							"name": "message",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"setSignature": [
						{
							"id": 786,
							"name": "message",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {},
							"parameters": [
								{
									"id": 787,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 776,
					"name": "style",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 777,
							"name": "style",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 798,
								"name": "ToastStyle"
							}
						}
					],
					"setSignature": [
						{
							"id": 778,
							"name": "style",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {},
							"parameters": [
								{
									"id": 779,
									"name": "style",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 798,
										"name": "ToastStyle"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 780,
					"name": "title",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"getSignature": [
						{
							"id": 781,
							"name": "title",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"setSignature": [
						{
							"id": 782,
							"name": "title",
							"kind": 1048576,
							"kindString": "Set signature",
							"flags": {},
							"parameters": [
								{
									"id": 783,
									"name": "title",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 790,
					"name": "hide",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"signatures": [
						{
							"id": 791,
							"name": "hide",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Hides the Toast.",
								"returns": "A promise that resolves when toast is hidden.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 788,
					"name": "show",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"signatures": [
						{
							"id": 789,
							"name": "show",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Shows the Toast.",
								"returns": "A promise that resolves when toast is shown.\n"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						772
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						784,
						776,
						780
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						790,
						788
					]
				}
			]
		},
		{
			"id": 147,
			"name": "ActionPanelItemProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Props of the {@link ActionPanel.Item} React component.",
				"tags": [
					{
						"tag": "subcategory",
						"text": "Action Panel\n"
					}
				]
			},
			"children": [
				{
					"id": 150,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The icon displayed for the action."
					},
					"type": {
						"type": "reference",
						"id": 751,
						"name": "ImageLike"
					}
				},
				{
					"id": 148,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "ID of the item.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nMake sure to assign each section or item a unique ID. If no ID is specified, a memoized auto-generated is used.\n"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 151,
					"name": "shortcut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The keyboard shortcut for the item."
					},
					"type": {
						"type": "reference",
						"id": 42,
						"name": "KeyboardShortcut"
					}
				},
				{
					"id": 149,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The title displayed for the item."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 152,
					"name": "onAction",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"signatures": [
						{
							"id": 153,
							"name": "onAction",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Callback that is triggered when the item is selected."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						150,
						148,
						151,
						149
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						152
					]
				}
			]
		},
		{
			"id": 141,
			"name": "ActionPanelProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Props of the {@link ActionPanel} React component.",
				"tags": [
					{
						"tag": "subcategory",
						"text": "Action Panel\n"
					}
				]
			},
			"children": [
				{
					"id": 142,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Sections or items. If {@link ActionPanel.Item} elements are specified, a default section is automatically created."
					},
					"type": {
						"type": "reference",
						"id": 139,
						"name": "ActionPanelChildren"
					}
				},
				{
					"id": 143,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The title displayed at the top of the panel"
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						142,
						143
					]
				}
			]
		},
		{
			"id": 144,
			"name": "ActionPanelSectionProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Props of the {@link ActionPanel.Section} React component.",
				"tags": [
					{
						"tag": "subcategory",
						"text": "Action Panel\n"
					}
				]
			},
			"children": [
				{
					"id": 145,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The item elements of the section.\nWhen used for the action panel, the first item in the list is the *primary* action that will be triggered by the default shortcut (ENTER), while the second item is the *secondary* action triggered by CMD + ENTER."
					},
					"type": {
						"type": "reference",
						"id": 140,
						"name": "ActionPanelSectionChildren"
					}
				},
				{
					"id": 146,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Title displayed above the section"
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						145,
						146
					]
				}
			]
		},
		{
			"id": 658,
			"name": "ActionPanelState",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Return type of the {@link useActionPanel} hook to perform global Action Panel updates.",
				"tags": [
					{
						"tag": "subcategory",
						"text": "Action Panel\n"
					}
				]
			},
			"children": [
				{
					"id": 659,
					"name": "update",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 660,
							"name": "update",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Updates the global Action Panel."
							},
							"parameters": [
								{
									"id": 661,
									"name": "actionPanel",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 141,
														"name": "ActionPanelProps"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "JSXElementConstructor"
															}
														]
													}
												],
												"name": "ReactElement"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						659
					]
				}
			]
		},
		{
			"id": 154,
			"name": "ActionPanelSubmenuProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Props of the {@link ActionPanel.Submenu} React component.",
				"tags": [
					{
						"tag": "subcategory",
						"text": "Action Panel\n"
					}
				]
			},
			"children": [
				{
					"id": 159,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Items of the submenu.",
						"tags": [
							{
								"tag": "example",
								"text": "\n```typescript\n<ActionPanel.Submenu title=\"Submenu\">\n   <ActionPanel.Item title=\"Just an action\" />\n</ActionPanel.Submenu>\n```\n"
							},
							{
								"tag": "remarks",
								"text": "\nIf {@link ActionPanelItem} elements are specified, a default section is automatically created.\\\nUse {@link ActionPanel.Submenu} as parent when specifying sub-menu's children to make code is more readable.\n"
							}
						]
					},
					"type": {
						"type": "reference",
						"id": 139,
						"name": "ActionPanelChildren"
					}
				},
				{
					"id": 157,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The icon displayed for the submenu."
					},
					"type": {
						"type": "reference",
						"id": 751,
						"name": "ImageLike"
					}
				},
				{
					"id": 155,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "ID of the submenu.\nMake sure to assign each section a unique ID or a UUID will be auto-generated."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 158,
					"name": "shortcut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The keyboard shortcut for the submenu."
					},
					"type": {
						"type": "reference",
						"id": 42,
						"name": "KeyboardShortcut"
					}
				},
				{
					"id": 156,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The title displayed for submenu."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						159,
						157,
						155,
						158,
						156
					]
				}
			]
		},
		{
			"id": 28,
			"name": "Application",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "An object that represents a locally installed application on the system.",
				"tags": [
					{
						"tag": "remarks",
						"text": "\nIt can be used to open files or folders in a specific application. Use {@link getApplications} or\n{@link getDefaultApplication} to get applications that can open a specific file or folder.\n"
					},
					{
						"tag": "subcategory",
						"text": "System\n"
					}
				]
			},
			"children": [
				{
					"id": 31,
					"name": "bundleId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The bundle identifier of the application, e.g. `com.raycast.macos`."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 29,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The display name of the application."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 30,
					"name": "path",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The absolute path to the application bundle, e.g. `/Applications/Raycast.app`,"
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						31,
						29,
						30
					]
				}
			]
		},
		{
			"id": 536,
			"name": "CopyToClipboardActionProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Props of the {@link CopyToClipboardAction} React component.",
				"tags": [
					{
						"tag": "subcategory",
						"text": "Actions\n"
					}
				]
			},
			"children": [
				{
					"id": 537,
					"name": "content",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The contents that will be written to the clipboard as string."
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 539,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A optional icon displayed for the item. See {@link ImageLike} for the supported formats and types.",
						"tags": [
							{
								"tag": "defaultvalue",
								"text": "{@link Icon.Clipboard}\n"
							}
						]
					},
					"type": {
						"type": "reference",
						"id": 751,
						"name": "ImageLike"
					}
				},
				{
					"id": 540,
					"name": "shortcut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The keyboard shortcut for the action."
					},
					"type": {
						"type": "reference",
						"id": 42,
						"name": "KeyboardShortcut"
					}
				},
				{
					"id": 538,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "An optional title for the action."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 541,
					"name": "onCopy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"signatures": [
						{
							"id": 542,
							"name": "onCopy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Callback when the content was copied to clipboard.",
								"tags": [
									{
										"tag": "remarks",
										"text": "\nThis is handy when you want to act on the copied content, e.g. up-rank recently copied content.\n"
									}
								]
							},
							"parameters": [
								{
									"id": 543,
									"name": "content",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						537,
						539,
						540,
						538
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						541
					]
				}
			]
		},
		{
			"id": 170,
			"name": "DetailProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Props of the {@link Detail} React component.",
				"tags": [
					{
						"tag": "subcategory",
						"text": "Detail\n"
					}
				]
			},
			"children": [
				{
					"id": 173,
					"name": "actions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A reference to an {@link ActionPanel}."
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 141,
										"name": "ActionPanelProps"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "JSXElementConstructor"
											}
										]
									}
								],
								"name": "ReactElement"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ActionsInterface.actions"
					}
				},
				{
					"id": 172,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"tags": [
							{
								"tag": "deprecated",
								"text": ""
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 141,
										"name": "ActionPanelProps"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "JSXElementConstructor"
											}
										]
									}
								],
								"name": "ReactElement"
							}
						]
					}
				},
				{
					"id": 175,
					"name": "isLoading",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether a loading bar should be shown or hidden below the search bar"
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "NavigationChildInterface.isLoading"
					}
				},
				{
					"id": 171,
					"name": "markdown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The CommonMark string to be rendered."
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 174,
					"name": "navigationTitle",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The main title for that view displayed in Raycast"
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "NavigationChildInterface.navigationTitle"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						173,
						172,
						175,
						171,
						174
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "ActionsInterface"
				},
				{
					"type": "reference",
					"name": "NavigationChildInterface"
				}
			]
		},
		{
			"id": 628,
			"name": "Environment",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Holds data about the environment the command is running in.\nPassed to a command on initialization."
			},
			"children": [
				{
					"id": 632,
					"name": "assetsPath",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The absolute path to the assets directory of the extension.\nUse to load icons, images, and other packaged resources."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 631,
					"name": "commandName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The name of the launched command, as specified in package.json"
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 630,
					"name": "extensionName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The name of the extension, as specified in package.json"
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 634,
					"name": "isDevelopment",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Indicates whether the command is a development command (vs. an installed store command)."
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 629,
					"name": "raycastVersion",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The version of the main Raycast app"
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 633,
					"name": "supportPath",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The absolute path for the support directory of an extension.\nUse to read and write files for the extension.\nNote that the directory at this path might not physically exist already, so make sure to first create it.\nFor instance using Node's fs module with the recursive option:",
						"tags": [
							{
								"tag": "example",
								"text": "\n```typescript\nfs.mkdirSync(ray.environment.supportPath, { recursive: true });\n```\n"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						632,
						631,
						630,
						634,
						629,
						633
					]
				}
			]
		},
		{
			"id": 749,
			"name": "FileIcon",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "An icon as it's used in the Finder.",
				"tags": [
					{
						"tag": "example",
						"text": "\n```typescript\nimport { List } from \"@raycast/api\";\n\nexport default () => {\n  return (\n    <List>\n      <List.Item title=\"File icon\" icon={{ fileIcon: __filename }} />\n    </List>\n  );\n};\n```\n"
					},
					{
						"tag": "subcategory",
						"text": "Icons & Images\n"
					}
				]
			},
			"children": [
				{
					"id": 750,
					"name": "fileIcon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The path to a file or folder to get it's icon from."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						750
					]
				}
			]
		},
		{
			"id": 399,
			"name": "FormCheckboxProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Props of the {@link Form.Checkbox} React component.",
				"tags": [
					{
						"tag": "subcategory",
						"text": "Form\n"
					}
				]
			},
			"children": [
				{
					"id": 405,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The default value of the item.\nKeep in mind that `defaultValue` will be configured once per component lifecycle. This means that if a user changes the value, `defaultValue` won't be configured on re-rendering.",
						"tags": [
							{
								"tag": "important",
								"text": "If you're using {@link FormItemProps.storeValue} and configured it as `true` then the stored value will be set."
							},
							{
								"tag": "important",
								"text": "If you configure {@link FormItemProps.value} at the same time with {@link FormItemProps.defaultValue}, the `value` will be set instead of `defaultValue`.\n"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 374,
						"name": "FormItemProps.defaultValue"
					}
				},
				{
					"id": 401,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "ID of the form item.\nMake sure to assign each form item a unique id."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 370,
						"name": "FormItemProps.id"
					}
				},
				{
					"id": 400,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The label displayed on the right side of the checkbox."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 403,
					"name": "storeValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the value of the item should be persisted after submitting, and restored next time the form is rendered."
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 372,
						"name": "FormItemProps.storeValue"
					}
				},
				{
					"id": 402,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The title displayed on the left side of the item."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 371,
						"name": "FormItemProps.title"
					}
				},
				{
					"id": 404,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The current value of the item."
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 373,
						"name": "FormItemProps.value"
					}
				},
				{
					"id": 406,
					"name": "onChange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"signatures": [
						{
							"id": 407,
							"name": "onChange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "The callback which will be triggered on the {@link FormItemProps.value} change for the item."
							},
							"parameters": [
								{
									"id": 408,
									"name": "newValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Value"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 376,
								"name": "FormItemProps.onChange"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 375,
						"name": "FormItemProps.onChange"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						405,
						401,
						400,
						403,
						402,
						404
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						406
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 369,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "boolean"
						}
					],
					"name": "FormItemProps"
				}
			]
		},
		{
			"id": 409,
			"name": "FormDatePickerProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Props of the {@link Form.DatePicker} React component.\nThe default {@link FormDatePickerProps.value} of the date picker **must** be formatted according to {@link FormViewDatePicker.dateFormat}.",
				"tags": [
					{
						"tag": "subcategory",
						"text": "Form\n"
					}
				]
			},
			"children": [
				{
					"id": 410,
					"name": "dateFormat",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The date format string to be used for {@link FormViewDatePicker.value}.\nThe default format is ISO 8601 (\"yyyy-MM-dd'T'HH:mm:ssXXXXX\")."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 415,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The default value of the item.\nKeep in mind that `defaultValue` will be configured once per component lifecycle. This means that if a user changes the value, `defaultValue` won't be configured on re-rendering.",
						"tags": [
							{
								"tag": "important",
								"text": "If you're using {@link FormItemProps.storeValue} and configured it as `true` then the stored value will be set."
							},
							{
								"tag": "important",
								"text": "If you configure {@link FormItemProps.value} at the same time with {@link FormItemProps.defaultValue}, the `value` will be set instead of `defaultValue`.\n"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 374,
						"name": "FormItemProps.defaultValue"
					}
				},
				{
					"id": 411,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "ID of the form item.\nMake sure to assign each form item a unique id."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 370,
						"name": "FormItemProps.id"
					}
				},
				{
					"id": 413,
					"name": "storeValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the value of the item should be persisted after submitting, and restored next time the form is rendered."
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 372,
						"name": "FormItemProps.storeValue"
					}
				},
				{
					"id": 412,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The title displayed on the left side of the item."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 371,
						"name": "FormItemProps.title"
					}
				},
				{
					"id": 414,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The current value of the item."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 373,
						"name": "FormItemProps.value"
					}
				},
				{
					"id": 416,
					"name": "onChange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"signatures": [
						{
							"id": 417,
							"name": "onChange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "The callback which will be triggered on the {@link FormItemProps.value} change for the item."
							},
							"parameters": [
								{
									"id": 418,
									"name": "newValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Value"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 376,
								"name": "FormItemProps.onChange"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 375,
						"name": "FormItemProps.onChange"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						410,
						415,
						411,
						413,
						412,
						414
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						416
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 369,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						}
					],
					"name": "FormItemProps"
				}
			]
		},
		{
			"id": 433,
			"name": "FormDropdownItemProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Props of the {@link Form.Dropdown.Item} React component.",
				"tags": [
					{
						"tag": "subcategory",
						"text": "Form\n"
					}
				]
			},
			"children": [
				{
					"id": 436,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A optional icon displayed for the item.\nSee {@link ImageLike} for the supported formats and types."
					},
					"type": {
						"type": "reference",
						"id": 751,
						"name": "ImageLike"
					}
				},
				{
					"id": 435,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The title displayed for the item."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 434,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Value of the dropdown item.\nMake sure to assign each unique value for each item."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						436,
						435,
						434
					]
				}
			]
		},
		{
			"id": 420,
			"name": "FormDropdownProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Props of the {@link Form.Dropdown} React component.\nThe {@link FormDropdownProps.value} here is ID ({@link FormDropdownItemProps.id}) of the default selected item.",
				"tags": [
					{
						"tag": "subcategory",
						"text": "Form\n"
					}
				]
			},
			"children": [
				{
					"id": 421,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Sections or items. If {@link FormDropdownItem} elements are specified, a default section is automatically created."
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 430,
										"name": "FormDropdownSectionProps"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "JSXElementConstructor"
											}
										]
									}
								],
								"name": "ReactElement"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"id": 430,
											"name": "FormDropdownSectionProps"
										},
										{
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "reference",
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "JSXElementConstructor"
												}
											]
										}
									],
									"name": "ReactElement"
								}
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 433,
										"name": "FormDropdownItemProps"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "JSXElementConstructor"
											}
										]
									}
								],
								"name": "ReactElement"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"id": 433,
											"name": "FormDropdownItemProps"
										},
										{
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "reference",
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "JSXElementConstructor"
												}
											]
										}
									],
									"name": "ReactElement"
								}
							}
						]
					}
				},
				{
					"id": 426,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The default value of the item.\nKeep in mind that `defaultValue` will be configured once per component lifecycle. This means that if a user changes the value, `defaultValue` won't be configured on re-rendering.",
						"tags": [
							{
								"tag": "important",
								"text": "If you're using {@link FormItemProps.storeValue} and configured it as `true` then the stored value will be set."
							},
							{
								"tag": "important",
								"text": "If you configure {@link FormItemProps.value} at the same time with {@link FormItemProps.defaultValue}, the `value` will be set instead of `defaultValue`.\n"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 374,
						"name": "FormItemProps.defaultValue"
					}
				},
				{
					"id": 422,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "ID of the form item.\nMake sure to assign each form item a unique id."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 370,
						"name": "FormItemProps.id"
					}
				},
				{
					"id": 424,
					"name": "storeValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the value of the item should be persisted after submitting, and restored next time the form is rendered."
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 372,
						"name": "FormItemProps.storeValue"
					}
				},
				{
					"id": 423,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The title displayed on the left side of the item."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 371,
						"name": "FormItemProps.title"
					}
				},
				{
					"id": 425,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The current value of the item."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 373,
						"name": "FormItemProps.value"
					}
				},
				{
					"id": 427,
					"name": "onChange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"signatures": [
						{
							"id": 428,
							"name": "onChange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "The callback which will be triggered on the {@link FormItemProps.value} change for the item."
							},
							"parameters": [
								{
									"id": 429,
									"name": "newValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Value"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 376,
								"name": "FormItemProps.onChange"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 375,
						"name": "FormItemProps.onChange"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						421,
						426,
						422,
						424,
						423,
						425
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						427
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 369,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						}
					],
					"name": "FormItemProps"
				}
			]
		},
		{
			"id": 430,
			"name": "FormDropdownSectionProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Props of the {@link Form.Dropdown.Section} React component.",
				"tags": [
					{
						"tag": "subcategory",
						"text": "Form\n"
					}
				]
			},
			"children": [
				{
					"id": 431,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The item elements of the section.\nWhen used for the action panel, the first item in the list is the *primary* action that will be triggered by the default shortcut (ENTER), while the second item is the *secondary* action triggered by CMD + ENTER."
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 433,
										"name": "FormDropdownItemProps"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "JSXElementConstructor"
											}
										]
									}
								],
								"name": "ReactElement"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"id": 433,
											"name": "FormDropdownItemProps"
										},
										{
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "reference",
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "JSXElementConstructor"
												}
											]
										}
									],
									"name": "ReactElement"
								}
							}
						]
					}
				},
				{
					"id": 432,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Title displayed above the section"
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						431,
						432
					]
				}
			]
		},
		{
			"id": 369,
			"name": "FormItemProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Props of the {@link Form.Item} React component.",
				"tags": [
					{
						"tag": "subcategory",
						"text": "Form\n"
					}
				]
			},
			"children": [
				{
					"id": 374,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The default value of the item.\nKeep in mind that `defaultValue` will be configured once per component lifecycle. This means that if a user changes the value, `defaultValue` won't be configured on re-rendering.",
						"tags": [
							{
								"tag": "important",
								"text": "If you're using {@link FormItemProps.storeValue} and configured it as `true` then the stored value will be set."
							},
							{
								"tag": "important",
								"text": "If you configure {@link FormItemProps.value} at the same time with {@link FormItemProps.defaultValue}, the `value` will be set instead of `defaultValue`.\n"
							}
						]
					},
					"type": {
						"type": "reference",
						"name": "Value"
					}
				},
				{
					"id": 370,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "ID of the form item.\nMake sure to assign each form item a unique id."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 372,
					"name": "storeValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the value of the item should be persisted after submitting, and restored next time the form is rendered."
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 371,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The title displayed on the left side of the item."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 373,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The current value of the item."
					},
					"type": {
						"type": "reference",
						"name": "Value"
					}
				},
				{
					"id": 375,
					"name": "onChange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"signatures": [
						{
							"id": 376,
							"name": "onChange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "The callback which will be triggered on the {@link FormItemProps.value} change for the item."
							},
							"parameters": [
								{
									"id": 377,
									"name": "newValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Value"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						374,
						370,
						372,
						371,
						373
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						375
					]
				}
			],
			"typeParameter": [
				{
					"id": 378,
					"name": "Value",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 355,
						"name": "FormValue"
					}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 379,
					"name": "FormTextFieldProps"
				},
				{
					"type": "reference",
					"id": 389,
					"name": "FormTextAreaProps"
				},
				{
					"type": "reference",
					"id": 399,
					"name": "FormCheckboxProps"
				},
				{
					"type": "reference",
					"id": 409,
					"name": "FormDatePickerProps"
				},
				{
					"type": "reference",
					"id": 420,
					"name": "FormDropdownProps"
				},
				{
					"type": "reference",
					"id": 437,
					"name": "FormTagPickerProps"
				}
			]
		},
		{
			"id": 359,
			"name": "FormProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Props of the {@link Form} React component.",
				"tags": [
					{
						"tag": "subcategory",
						"text": "Form\n"
					}
				]
			},
			"children": [
				{
					"id": 365,
					"name": "actions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A reference to an {@link ActionPanel}."
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 141,
										"name": "ActionPanelProps"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "JSXElementConstructor"
											}
										]
									}
								],
								"name": "ReactElement"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ActionsInterface.actions"
					}
				},
				{
					"id": 360,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The {@link FormItemElement} elements of the form."
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 369,
										"typeArguments": [
											{
												"type": "reference",
												"id": 355,
												"name": "FormValue"
											}
										],
										"name": "FormItemProps"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "JSXElementConstructor"
											}
										]
									}
								],
								"name": "ReactElement"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"id": 369,
											"typeArguments": [
												{
													"type": "reference",
													"id": 355,
													"name": "FormValue"
												}
											],
											"name": "FormItemProps"
										},
										{
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "reference",
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "JSXElementConstructor"
												}
											]
										}
									],
									"name": "ReactElement"
								}
							}
						]
					}
				},
				{
					"id": 367,
					"name": "isLoading",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether a loading bar should be shown or hidden below the search bar"
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "NavigationChildInterface.isLoading"
					}
				},
				{
					"id": 366,
					"name": "navigationTitle",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The main title for that view displayed in Raycast"
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "NavigationChildInterface.navigationTitle"
					}
				},
				{
					"id": 361,
					"name": "submitTitle",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The title of the submit action button. If no title is set, Raycast displays a default title."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 362,
					"name": "onSubmit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 363,
							"name": "onSubmit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Callback that is triggered when the submit action button is pressed.\nUse the handler to perform custom validation logic and call other Raycast API methods.\nThe handler receives a the values object containing the user input."
							},
							"parameters": [
								{
									"id": 364,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Values"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						365,
						360,
						367,
						366,
						361
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						362
					]
				}
			],
			"typeParameter": [
				{
					"id": 368,
					"name": "Values",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "ActionsInterface"
				},
				{
					"type": "reference",
					"name": "NavigationChildInterface"
				}
			]
		},
		{
			"id": 419,
			"name": "FormSeparatorProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Props of the {@link Form.Separator} React component.",
				"tags": [
					{
						"tag": "subcategory",
						"text": "Form\n"
					}
				]
			}
		},
		{
			"id": 448,
			"name": "FormTagPickerItemProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Props of the {@link Form.FormTagPicker.Item} React component.",
				"tags": [
					{
						"tag": "subcategory",
						"text": "Form\n"
					}
				]
			},
			"children": [
				{
					"id": 451,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "An icon to show in the token."
					},
					"type": {
						"type": "reference",
						"id": 751,
						"name": "ImageLike"
					}
				},
				{
					"id": 450,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The display title of the token."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 449,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Value of the tag picker item.\nMake sure to assign unique value for each item."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						451,
						450,
						449
					]
				}
			]
		},
		{
			"id": 437,
			"name": "FormTagPickerProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Props of the {@link Form.TagPicker} React component.\nThe {@link FormTagPickerProps.value} here is the IDs ({@link FormTagPickerItemProps.id}) of the default selected items.",
				"tags": [
					{
						"tag": "subcategory",
						"text": "Form\n"
					}
				]
			},
			"children": [
				{
					"id": 438,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The list of tag picker's items."
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 448,
										"name": "FormTagPickerItemProps"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "JSXElementConstructor"
											}
										]
									}
								],
								"name": "ReactElement"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"id": 448,
											"name": "FormTagPickerItemProps"
										},
										{
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "reference",
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "JSXElementConstructor"
												}
											]
										}
									],
									"name": "ReactElement"
								}
							}
						]
					}
				},
				{
					"id": 444,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The default value of the item.\nKeep in mind that `defaultValue` will be configured once per component lifecycle. This means that if a user changes the value, `defaultValue` won't be configured on re-rendering.",
						"tags": [
							{
								"tag": "important",
								"text": "If you're using {@link FormItemProps.storeValue} and configured it as `true` then the stored value will be set."
							},
							{
								"tag": "important",
								"text": "If you configure {@link FormItemProps.value} at the same time with {@link FormItemProps.defaultValue}, the `value` will be set instead of `defaultValue`.\n"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 374,
						"name": "FormItemProps.defaultValue"
					}
				},
				{
					"id": 440,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "ID of the form item.\nMake sure to assign each form item a unique id."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 370,
						"name": "FormItemProps.id"
					}
				},
				{
					"id": 439,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Placeholder text shown in the token field."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 442,
					"name": "storeValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the value of the item should be persisted after submitting, and restored next time the form is rendered."
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 372,
						"name": "FormItemProps.storeValue"
					}
				},
				{
					"id": 441,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The title displayed on the left side of the item."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 371,
						"name": "FormItemProps.title"
					}
				},
				{
					"id": 443,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The current value of the item."
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 373,
						"name": "FormItemProps.value"
					}
				},
				{
					"id": 445,
					"name": "onChange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"signatures": [
						{
							"id": 446,
							"name": "onChange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "The callback which will be triggered on the {@link FormItemProps.value} change for the item."
							},
							"parameters": [
								{
									"id": 447,
									"name": "newValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Value"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 376,
								"name": "FormItemProps.onChange"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 375,
						"name": "FormItemProps.onChange"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						438,
						444,
						440,
						439,
						442,
						441,
						443
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						445
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 369,
					"typeArguments": [
						{
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"name": "FormItemProps"
				}
			]
		},
		{
			"id": 389,
			"name": "FormTextAreaProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Props of the {@link Form.TextArea} React component.",
				"tags": [
					{
						"tag": "subcategory",
						"text": "Form\n"
					}
				]
			},
			"children": [
				{
					"id": 395,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The default value of the item.\nKeep in mind that `defaultValue` will be configured once per component lifecycle. This means that if a user changes the value, `defaultValue` won't be configured on re-rendering.",
						"tags": [
							{
								"tag": "important",
								"text": "If you're using {@link FormItemProps.storeValue} and configured it as `true` then the stored value will be set."
							},
							{
								"tag": "important",
								"text": "If you configure {@link FormItemProps.value} at the same time with {@link FormItemProps.defaultValue}, the `value` will be set instead of `defaultValue`.\n"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 374,
						"name": "FormItemProps.defaultValue"
					}
				},
				{
					"id": 391,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "ID of the form item.\nMake sure to assign each form item a unique id."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 370,
						"name": "FormItemProps.id"
					}
				},
				{
					"id": 390,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Placeholder text shown in the text field."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 393,
					"name": "storeValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the value of the item should be persisted after submitting, and restored next time the form is rendered."
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 372,
						"name": "FormItemProps.storeValue"
					}
				},
				{
					"id": 392,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The title displayed on the left side of the item."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 371,
						"name": "FormItemProps.title"
					}
				},
				{
					"id": 394,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The current value of the item."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 373,
						"name": "FormItemProps.value"
					}
				},
				{
					"id": 396,
					"name": "onChange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"signatures": [
						{
							"id": 397,
							"name": "onChange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "The callback which will be triggered on the {@link FormItemProps.value} change for the item."
							},
							"parameters": [
								{
									"id": 398,
									"name": "newValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Value"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 376,
								"name": "FormItemProps.onChange"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 375,
						"name": "FormItemProps.onChange"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						395,
						391,
						390,
						393,
						392,
						394
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						396
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 369,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						}
					],
					"name": "FormItemProps"
				}
			]
		},
		{
			"id": 379,
			"name": "FormTextFieldProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Props of the {@link Form.TextField} React component.",
				"tags": [
					{
						"tag": "subcategory",
						"text": "Form\n"
					}
				]
			},
			"children": [
				{
					"id": 385,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The default value of the item.\nKeep in mind that `defaultValue` will be configured once per component lifecycle. This means that if a user changes the value, `defaultValue` won't be configured on re-rendering.",
						"tags": [
							{
								"tag": "important",
								"text": "If you're using {@link FormItemProps.storeValue} and configured it as `true` then the stored value will be set."
							},
							{
								"tag": "important",
								"text": "If you configure {@link FormItemProps.value} at the same time with {@link FormItemProps.defaultValue}, the `value` will be set instead of `defaultValue`.\n"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 374,
						"name": "FormItemProps.defaultValue"
					}
				},
				{
					"id": 381,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "ID of the form item.\nMake sure to assign each form item a unique id."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 370,
						"name": "FormItemProps.id"
					}
				},
				{
					"id": 380,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Placeholder text shown in the text field."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 383,
					"name": "storeValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the value of the item should be persisted after submitting, and restored next time the form is rendered."
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 372,
						"name": "FormItemProps.storeValue"
					}
				},
				{
					"id": 382,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The title displayed on the left side of the item."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 371,
						"name": "FormItemProps.title"
					}
				},
				{
					"id": 384,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The current value of the item."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 373,
						"name": "FormItemProps.value"
					}
				},
				{
					"id": 386,
					"name": "onChange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"signatures": [
						{
							"id": 387,
							"name": "onChange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "The callback which will be triggered on the {@link FormItemProps.value} change for the item."
							},
							"parameters": [
								{
									"id": 388,
									"name": "newValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Value"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 376,
								"name": "FormItemProps.onChange"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 375,
						"name": "FormItemProps.onChange"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						385,
						381,
						380,
						383,
						382,
						384
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						386
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 369,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						}
					],
					"name": "FormItemProps"
				}
			]
		},
		{
			"id": 356,
			"name": "FormValues",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Values of items in the form.",
				"tags": [
					{
						"tag": "remarks",
						"text": "\nFor type-safe form values you can define your own interface. Use the ID's of the form items\nas property name. See the example for more details.\n"
					},
					{
						"tag": "example",
						"text": "\n```typescript\nimport { Form } from \"@raycast/api\";\n\ninterface Values {\n  todo: string;\n  due?: Date;\n}\n\nexport default () => {\n  function handleSubmit(values: Values) {\n    console.log(values);\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.TextField id=\"todo\" title=\"Todo\" />\n      <Form.DatePicker id=\"due\" title=\"Due Date\" />\n    </Form>\n  );\n};\n```\n"
					},
					{
						"tag": "subcategory",
						"text": "Form\n"
					}
				]
			},
			"indexSignature": {
				"id": 357,
				"name": "__index",
				"kind": 8192,
				"kindString": "Index signature",
				"flags": {},
				"comment": {
					"shortText": "The form value of a given item."
				},
				"parameters": [
					{
						"id": 358,
						"name": "item",
						"kind": 32768,
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "intrinsic",
					"name": "any"
				}
			}
		},
		{
			"id": 752,
			"name": "Image",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Display different types of images, including network images or bundled assets.",
				"tags": [
					{
						"tag": "example",
						"text": "\n```typescript\n// Built-in icon\nconst icon = Icon.Eye\n\n// Built-in icon with tint color\nconst tintedIcon = { source: Icon.Bubble, tintColor: Color.Red }\n\n// Bundled asset with circular mask\nconst avatar = { source: \"avatar.png\", mask: ImageMask.Circle }\n\n// Theme-aware icon\nconst icon = { source: { light: \"icon-light.png\", dark: \"icon-dark.png\" }}\n```\n"
					},
					{
						"tag": "remark",
						"text": "\nApply image transforms to the source, such as a `mask` or a `tintColor`.\n"
					},
					{
						"tag": "subcategory",
						"text": "Icons & Images\n"
					}
				]
			},
			"children": [
				{
					"id": 754,
					"name": "mask",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A {@link ImageMask} to apply to the image."
					},
					"type": {
						"type": "reference",
						"id": 760,
						"name": "ImageMask"
					}
				},
				{
					"id": 753,
					"name": "source",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The source of the image."
					},
					"type": {
						"type": "reference",
						"id": 756,
						"name": "ImageSource"
					}
				},
				{
					"id": 755,
					"name": "tintColor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A {@link ColorLike} to tint all the non-transparent pixels of the image."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						754,
						753,
						755
					]
				}
			]
		},
		{
			"id": 42,
			"name": "KeyboardShortcut",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "A keyboard shortcut is defined by one or more modifier keys (command, control, etc.) and a single key equivalent (a character or special key).\nSee {@link KeyModifier} and {@link KeyEquivalent} for supported values.",
				"tags": [
					{
						"tag": "example",
						"text": "\n```typescript\nimport { ActionPanel, Detail } from \"@raycast/api\";\n\nexport default function Command() {\n  return (\n    <Detail markdown=\"Let's play some games 👾\">\n      <ActionPanel title=\"Game controls\">\n        <ActionPanel.Item\n          title=\"Up\"\n          shortcut={{ modifiers: [\"opt\"], key: \"arrowUp\" }}\n          onAction={() => console.log(\"Go up\")}\n        />\n        <ActionPanel.Item\n          title=\"Down\"\n          shortcut={{ modifiers: [\"opt\"], key: \"arrowDown\" }}\n          onAction={() => console.log(\"Go down\")}\n        />\n        <ActionPanel.Item\n          title=\"Left\"\n          shortcut={{ modifiers: [\"opt\"], key: \"arrowLeft\" }}\n          onAction={() => console.log(\"Go left\")}\n        />\n        <ActionPanel.Item\n          title=\"Right\"\n          shortcut={{ modifiers: [\"opt\"], key: \"arrowRight\" }}\n          onAction={() => console.log(\"Go right\")}\n        />\n      </ActionPanel>\n    </Detail>\n  );\n}\n```\n"
					}
				]
			},
			"children": [
				{
					"id": 44,
					"name": "key",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 47,
						"name": "KeyEquivalent"
					}
				},
				{
					"id": 43,
					"name": "modifiers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 46,
							"name": "KeyModifier"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						44,
						43
					]
				}
			]
		},
		{
			"id": 523,
			"name": "ListItemProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Props of the {@link List.Item} React component.",
				"tags": [
					{
						"tag": "subcategory",
						"text": "List\n"
					}
				]
			},
			"children": [
				{
					"id": 530,
					"name": "accessoryIcon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A optional icon displayed as accessory for the list item.\nSee {@link ImageLike} for the supported formats and types."
					},
					"type": {
						"type": "reference",
						"id": 751,
						"name": "ImageLike"
					}
				},
				{
					"id": 527,
					"name": "accessoryTitle",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "An additional icon displayed for the item.\nSee {@link ImageLike} for the supported formats and types."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 531,
					"name": "actions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "An {@link ActionPanel} that will be updated for the selected list item."
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 141,
										"name": "ActionPanelProps"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "JSXElementConstructor"
											}
										]
									}
								],
								"name": "ReactElement"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"name": "ActionsInterface.actions"
					}
				},
				{
					"id": 532,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"tags": [
							{
								"tag": "deprecated",
								"text": ""
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 141,
										"name": "ActionPanelProps"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "JSXElementConstructor"
											}
										]
									}
								],
								"name": "ReactElement"
							}
						]
					}
				},
				{
					"id": 529,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A optional icon displayed for the list item.\nSee {@link ImageLike} for the supported formats and types."
					},
					"type": {
						"type": "reference",
						"id": 751,
						"name": "ImageLike"
					}
				},
				{
					"id": 524,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "ID of the item.\nMake sure to assign each item a unique ID or a UUID will be auto generated."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 528,
					"name": "keywords",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "An optional property used for providing additional indexable strings for search.\nWhen filtering the list in Raycast through the search bar, the keywords will be searched in addition to the title."
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 526,
					"name": "subtitle",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "An optional subtitle displayed next to the main title."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 525,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The main title displayed for that item."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						530,
						527,
						531,
						532,
						529,
						524,
						528,
						526,
						525
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "ActionsInterface"
				}
			]
		},
		{
			"id": 504,
			"name": "ListProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Props of the {@link List} React component.",
				"tags": [
					{
						"tag": "subcategory",
						"text": "List\n"
					}
				]
			},
			"children": [
				{
					"id": 515,
					"name": "actions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A reference to an {@link ActionPanel}."
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 141,
										"name": "ActionPanelProps"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "JSXElementConstructor"
											}
										]
									}
								],
								"name": "ReactElement"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ActionsInterface.actions"
					}
				},
				{
					"id": 505,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "List sections or items. If {@link ListItem} elements are specified, a default section is automatically created."
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 518,
										"name": "ListSectionProps"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "JSXElementConstructor"
											}
										]
									}
								],
								"name": "ReactElement"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"id": 518,
											"name": "ListSectionProps"
										},
										{
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "reference",
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "JSXElementConstructor"
												}
											]
										}
									],
									"name": "ReactElement"
								}
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 523,
										"name": "ListItemProps"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "JSXElementConstructor"
											}
										]
									}
								],
								"name": "ReactElement"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"id": 523,
											"name": "ListItemProps"
										},
										{
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "reference",
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "JSXElementConstructor"
												}
											]
										}
									],
									"name": "ReactElement"
								}
							}
						]
					}
				},
				{
					"id": 517,
					"name": "isLoading",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether a loading bar should be shown or hidden below the search bar"
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "NavigationChildInterface.isLoading"
					}
				},
				{
					"id": 516,
					"name": "navigationTitle",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The main title for that view displayed in Raycast"
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "NavigationChildInterface.navigationTitle"
					}
				},
				{
					"id": 509,
					"name": "searchBarPlaceholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Placeholder text that will be shown in the search bar."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 510,
					"name": "selectedItemId",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Selects the item with the specified id."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 511,
					"name": "throttle",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines whether the {@link ListProps.onSearchTextChange} will be triggered on every keyboard press or with a delay for throttling the events.\nRecommended to set to `true` when using custom filtering logic with asynchronous operations (e.g. network requests).",
						"tags": [
							{
								"tag": "defaultvalue",
								"text": "false\n"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 512,
					"name": "onSearchTextChange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"signatures": [
						{
							"id": 513,
							"name": "onSearchTextChange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Callback triggered when the search bar text changes.\nNote that built-in list filtering will be disabled when this callback is set."
							},
							"parameters": [
								{
									"id": 514,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 506,
					"name": "onSelectionChange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"signatures": [
						{
							"id": 507,
							"name": "onSelectionChange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Callback triggered when the item selection in the list changes."
							},
							"parameters": [
								{
									"id": 508,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						515,
						505,
						517,
						516,
						509,
						510,
						511
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						512,
						506
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "ActionsInterface"
				},
				{
					"type": "reference",
					"name": "NavigationChildInterface"
				}
			]
		},
		{
			"id": 518,
			"name": "ListSectionProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Props of the {@link List.Section} React component.",
				"tags": [
					{
						"tag": "subcategory",
						"text": "List\n"
					}
				]
			},
			"children": [
				{
					"id": 519,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The {@link ListItem} elements of the section."
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 523,
										"name": "ListItemProps"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "JSXElementConstructor"
											}
										]
									}
								],
								"name": "ReactElement"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"id": 523,
											"name": "ListItemProps"
										},
										{
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "reference",
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "JSXElementConstructor"
												}
											]
										}
									],
									"name": "ReactElement"
								}
							}
						]
					}
				},
				{
					"id": 520,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "ID of the section.\nMake sure to assign each section a unique ID or a UUID will be auto generated."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 522,
					"name": "subtitle",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "An optional subtitle displayed next to the title of the section."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 521,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Title displayed above the section."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						519,
						520,
						522,
						521
					]
				}
			]
		},
		{
			"id": 670,
			"name": "Navigation",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Return type of the {@link useNavigation} hook to perform push and pop actions.",
				"tags": [
					{
						"tag": "subcategory",
						"text": "Navigation\n"
					}
				]
			},
			"children": [
				{
					"id": 674,
					"name": "pop",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 675,
							"name": "pop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Pop current view component from the navigation stack."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 671,
					"name": "push",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"signatures": [
						{
							"id": 672,
							"name": "push",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Push a new view component to the navigation stack."
							},
							"parameters": [
								{
									"id": 673,
									"name": "component",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The React component to push to the navigation stack.\n"
									},
									"type": {
										"type": "reference",
										"name": "ReactNode"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						674,
						671
					]
				}
			]
		},
		{
			"id": 547,
			"name": "OpenActionProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Props of the {@link OpenAction} React component.",
				"tags": [
					{
						"tag": "subcategory",
						"text": "Actions\n"
					}
				]
			},
			"children": [
				{
					"id": 549,
					"name": "application",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The application name to use for opening the file.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nIf no application name is specified, the default application as determined by the system is used to open the\nspecified file.\n"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"id": 28,
								"name": "Application"
							}
						]
					}
				},
				{
					"id": 551,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The icon displayed for the action.",
						"tags": [
							{
								"tag": "defaultvalue",
								"text": "{@link Icon.Finder}\n"
							}
						]
					},
					"type": {
						"type": "reference",
						"id": 751,
						"name": "ImageLike"
					}
				},
				{
					"id": 552,
					"name": "shortcut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The keyboard shortcut for the action."
					},
					"type": {
						"type": "reference",
						"id": 42,
						"name": "KeyboardShortcut"
					}
				},
				{
					"id": 548,
					"name": "target",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The file, folder or URL to open."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 550,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The title for the action."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 553,
					"name": "onOpen",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"signatures": [
						{
							"id": 554,
							"name": "onOpen",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Callback when the file or folder was opened.",
								"tags": [
									{
										"tag": "remarks",
										"text": "\nThis is handy when you want to act on an opened file or folder, e.g. store a history of opened items.\n"
									}
								]
							},
							"parameters": [
								{
									"id": 555,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						549,
						551,
						552,
						548,
						550
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						553
					]
				}
			]
		},
		{
			"id": 559,
			"name": "OpenInBrowserActionProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Props of the {@link OpenInBrowserAction} React component.",
				"tags": [
					{
						"tag": "subcategory",
						"text": "Actions\n"
					}
				]
			},
			"children": [
				{
					"id": 562,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The icon displayed for the action.",
						"tags": [
							{
								"tag": "defaultvalue",
								"text": "{@link Icon.Globe}\n"
							}
						]
					},
					"type": {
						"type": "reference",
						"id": 751,
						"name": "ImageLike"
					}
				},
				{
					"id": 563,
					"name": "shortcut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The optional keyboard shortcut for the menu item"
					},
					"type": {
						"type": "reference",
						"id": 42,
						"name": "KeyboardShortcut"
					}
				},
				{
					"id": 561,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "An optional title for the action."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 560,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The URL to open."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 564,
					"name": "onOpen",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"signatures": [
						{
							"id": 565,
							"name": "onOpen",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Callback when the URL was opened in the browser.",
								"tags": [
									{
										"tag": "remarks",
										"text": "\nThis is handy when you want to act on the opened link, e.g. store a history of visited links.\n"
									}
								]
							},
							"parameters": [
								{
									"id": 566,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						562,
						563,
						561,
						560
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						564
					]
				}
			]
		},
		{
			"id": 570,
			"name": "OpenWithActionProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Props of the {@link OpenWithAction} React component.",
				"tags": [
					{
						"tag": "subcategory",
						"text": "Actions\n"
					}
				]
			},
			"children": [
				{
					"id": 573,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The icon displayed for the action.",
						"tags": [
							{
								"tag": "defaultvalue",
								"text": "{@link Icon.Upload}\n"
							}
						]
					},
					"type": {
						"type": "reference",
						"id": 751,
						"name": "ImageLike"
					}
				},
				{
					"id": 571,
					"name": "path",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The path to open."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 574,
					"name": "shortcut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The keyboard shortcut for the action."
					},
					"type": {
						"type": "reference",
						"id": 42,
						"name": "KeyboardShortcut"
					}
				},
				{
					"id": 572,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The title for the action.",
						"tags": [
							{
								"tag": "defaultvalue",
								"text": "Open With\n"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 575,
					"name": "onOpen",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"signatures": [
						{
							"id": 576,
							"name": "onOpen",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Callback when the file or folder was opened.",
								"tags": [
									{
										"tag": "remarks",
										"text": "\nThis is handy when you want to act on an opened file or folder, e.g. store a history of opened items.\n"
									}
								]
							},
							"parameters": [
								{
									"id": 577,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						573,
						571,
						574,
						572
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						575
					]
				}
			]
		},
		{
			"id": 581,
			"name": "PasteActionProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Props of the {@link PasteAction} React component.",
				"tags": [
					{
						"tag": "subcategory",
						"text": "Actions\n"
					}
				]
			},
			"children": [
				{
					"id": 582,
					"name": "content",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The contents that will be written to the clipboard as string."
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 584,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The icon displayed for the action.",
						"tags": [
							{
								"tag": "defaultvalue",
								"text": "{@link Icon.Clipboard}\n"
							}
						]
					},
					"type": {
						"type": "reference",
						"id": 751,
						"name": "ImageLike"
					}
				},
				{
					"id": 585,
					"name": "shortcut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The keyboard shortcut for the action."
					},
					"type": {
						"type": "reference",
						"id": 42,
						"name": "KeyboardShortcut"
					}
				},
				{
					"id": 583,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "An optional title for the action."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 586,
					"name": "onPaste",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"signatures": [
						{
							"id": 587,
							"name": "onPaste",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Callback when the content was pasted into the front-most application.",
								"tags": [
									{
										"tag": "remarks",
										"text": "\nThis is handy when you want to act on the pasted content, e.g. up-rank recently pasted content.\n"
									}
								]
							},
							"parameters": [
								{
									"id": 588,
									"name": "content",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						582,
						584,
						585,
						583
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						586
					]
				}
			]
		},
		{
			"id": 640,
			"name": "Preference",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Holds data about a single preference item (entered in Raycast Preferences).\nMaps to the properties declared in package.json."
			},
			"children": [
				{
					"id": 651,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The data that is used for dropdowns."
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				},
				{
					"id": 647,
					"name": "default",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The default value of the preference if there is no `value` specified."
					},
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 645,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The description of the preference.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThe description is shown in the Raycast preferences as well as in the\nonboarding view for required preferences.\n"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 650,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A label that is used for checkboxes."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 649,
					"name": "link",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A link for further information about the preference.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThis is useful for preferneces that need additional setup. F.e. an API token\nthat a user needs to generate. The link should open the website where the\nuser can find it's tokens or to a description how to get one if it's more\ncomplicated.\n"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 641,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The name of the preference."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 648,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A placeholder that is used for textfields and passwords."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 643,
					"name": "required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Specifies if the preference is required.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nIf the preference is required, an onboarding view is shown when the\nextension is opened for the first time.\n"
							},
							{
								"tag": "default",
								"text": "false\n"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 644,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The title of the preference.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThe title is also shown in the Raycast preferences.\n"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 642,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The type of the preference."
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "textfield"
							},
							{
								"type": "literal",
								"value": "password"
							},
							{
								"type": "literal",
								"value": "checkbox"
							},
							{
								"type": "literal",
								"value": "dropdown"
							}
						]
					}
				},
				{
					"id": 646,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The value of the preference."
					},
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						651,
						647,
						645,
						650,
						649,
						641,
						648,
						643,
						644,
						642,
						646
					]
				}
			]
		},
		{
			"id": 653,
			"name": "PreferenceValues",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Values of preference items."
			},
			"indexSignature": {
				"id": 654,
				"name": "__index",
				"kind": 8192,
				"kindString": "Index signature",
				"flags": {},
				"parameters": [
					{
						"id": 655,
						"name": "name",
						"kind": 32768,
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "intrinsic",
					"name": "any"
				}
			}
		},
		{
			"id": 592,
			"name": "PushActionProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Props of the {@link PushAction} React component.",
				"tags": [
					{
						"tag": "subcategory",
						"text": "Actions\n"
					}
				]
			},
			"children": [
				{
					"id": 595,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The icon displayed for the action."
					},
					"type": {
						"type": "reference",
						"id": 751,
						"name": "ImageLike"
					}
				},
				{
					"id": 596,
					"name": "shortcut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The keyboard shortcut for the action."
					},
					"type": {
						"type": "reference",
						"id": 42,
						"name": "KeyboardShortcut"
					}
				},
				{
					"id": 594,
					"name": "target",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The target view that will be pushed to the navigation stack."
					},
					"type": {
						"type": "reference",
						"name": "ReactNode"
					}
				},
				{
					"id": 593,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The title displayed for the item."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 597,
					"name": "onPush",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"signatures": [
						{
							"id": 598,
							"name": "onPush",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Callback when the target view was pushed.",
								"tags": [
									{
										"tag": "remarks",
										"text": "\nThis is handy when you want to act on the pushed target view, e.g. uprank a selected list item.\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						595,
						596,
						594,
						593
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						597
					]
				}
			]
		},
		{
			"id": 602,
			"name": "ShowInFinderActionProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Props of the {@link ShowInFinderAction} React component.",
				"tags": [
					{
						"tag": "subcategory",
						"text": "Actions\n"
					}
				]
			},
			"children": [
				{
					"id": 605,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A optional icon displayed for the item. See {@link ImageLike} for the supported formats and types.",
						"tags": [
							{
								"tag": "defaultvalue",
								"text": "{@link Icon.Finder}\n"
							}
						]
					},
					"type": {
						"type": "reference",
						"id": 751,
						"name": "ImageLike"
					}
				},
				{
					"id": 603,
					"name": "path",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The path to open."
					},
					"type": {
						"type": "reference",
						"name": "PathLike"
					}
				},
				{
					"id": 606,
					"name": "shortcut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The keyboard shortcut for the action."
					},
					"type": {
						"type": "reference",
						"id": 42,
						"name": "KeyboardShortcut"
					}
				},
				{
					"id": 604,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "An optional title for the action.",
						"tags": [
							{
								"tag": "defaultvalue",
								"text": "Show in Finder\n"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 607,
					"name": "onShow",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"signatures": [
						{
							"id": 608,
							"name": "onShow",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Callback when the file or folder was shown in the Finder.",
								"tags": [
									{
										"tag": "remarks",
										"text": "\nThis is handy when you want to act on revealed files or folders, e.g. up-rank recently opened items.\n"
									}
								]
							},
							"parameters": [
								{
									"id": 609,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "PathLike"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						605,
						603,
						606,
						604
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						607
					]
				}
			]
		},
		{
			"id": 794,
			"name": "ToastOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "The options to create a {@link Toast}.",
				"tags": [
					{
						"tag": "example",
						"text": "\n```typescript\nimport { Toast, ToastOptions, ToastStyle } from \"@raycast/api\";\n\nexport default async () => {\n  const options: ToastOptions = {\n    style: ToastStyle.Success,\n    title: \"Finished cooking\",\n    message: \"Delicious pasta for lunch\",\n  };\n  const toast = new Toast(options);\n  await toast.show();\n};\n```\n"
					},
					{
						"tag": "subcategory",
						"text": "Toast\n"
					}
				]
			},
			"children": [
				{
					"id": 797,
					"name": "message",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "An additional message for the toast. Useful to show more information, e.g. an identifier of a newly create asset"
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 795,
					"name": "style",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The style of a toast."
					},
					"type": {
						"type": "reference",
						"id": 798,
						"name": "ToastStyle"
					}
				},
				{
					"id": 796,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The title of a toast. Displayed on the top."
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						797,
						795,
						796
					]
				}
			]
		},
		{
			"id": 613,
			"name": "TrashActionProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Props of the {@link TrashAction} React component.",
				"tags": [
					{
						"tag": "subcategory",
						"text": "Actions\n"
					}
				]
			},
			"children": [
				{
					"id": 616,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A optional icon displayed for the action.",
						"tags": [
							{
								"tag": "defaultvalue",
								"text": "{@link Icon.Trash}\n"
							}
						]
					},
					"type": {
						"type": "reference",
						"id": 751,
						"name": "ImageLike"
					}
				},
				{
					"id": 614,
					"name": "paths",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The item or items to move to the trash."
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "PathLike"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "PathLike"
								}
							}
						]
					}
				},
				{
					"id": 617,
					"name": "shortcut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The optional keyboard shortcut for the action."
					},
					"type": {
						"type": "reference",
						"id": 42,
						"name": "KeyboardShortcut"
					}
				},
				{
					"id": 615,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "An optional title for the action.",
						"tags": [
							{
								"tag": "defaultvalue",
								"text": "Move to Trash\n"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 618,
					"name": "onTrash",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"signatures": [
						{
							"id": 619,
							"name": "onTrash",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Callback when all items were moved to the trash.",
								"tags": [
									{
										"tag": "remarks",
										"text": "\nThis is handy when you want to act on a trashed item, e.g. update a list.\nThe callback returns the same `paths` as passed originally.\n"
									}
								]
							},
							"parameters": [
								{
									"id": 620,
									"name": "paths",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "PathLike"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "PathLike"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						616,
						614,
						617,
						615
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						618
					]
				}
			]
		},
		{
			"id": 139,
			"name": "ActionPanelChildren",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "Supported children for the {@link ActionPanel} and {@link ActionPanelSubmenu} components.",
				"tags": [
					{
						"tag": "subcategory",
						"text": "Action Panel\n"
					}
				]
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 144,
								"name": "ActionPanelSectionProps"
							}
						],
						"name": "ReactElement"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 144,
									"name": "ActionPanelSectionProps"
								}
							],
							"name": "ReactElement"
						}
					},
					{
						"type": "reference",
						"id": 140,
						"name": "ActionPanelSectionChildren"
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 140,
			"name": "ActionPanelSectionChildren",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "Supported children for the {@link ActionPanelSection} component.",
				"tags": [
					{
						"tag": "subcategory",
						"text": "Action Panel\n"
					}
				]
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 147,
								"name": "ActionPanelItemProps"
							}
						],
						"name": "ReactElement"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 147,
									"name": "ActionPanelItemProps"
								}
							],
							"name": "ReactElement"
						}
					},
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 154,
								"name": "ActionPanelSubmenuProps"
							}
						],
						"name": "ReactElement"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 154,
									"name": "ActionPanelSubmenuProps"
								}
							],
							"name": "ReactElement"
						}
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 696,
			"name": "ColorLike",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "Union type for the supported color types.",
				"tags": [
					{
						"tag": "remark",
						"text": "\nBesides the {@link Color}, you can use any of the following color formats:\n- HEX, e.g `#FF0000`\n- Short HEX, e.g. `#F00`\n- RGBA, e.g. `rgb(255, 0, 0)`\n- RGBA Percentage, e.g. `rgb(255, 0, 0, 1.0)`\n- HSL, e.g. `hsla(200, 20%, 33%, 0.2)`\n- Keywords, e.g. `red`\n\nColors different to the built-in ones (see {@link Color}) will be dynamically adjusted to fit the contrast.\n"
					},
					{
						"tag": "example",
						"text": "\n```typescript\nimport { Color, Icon, List } from \"@raycast/api\";\n\nexport default () => {\n  return (\n    <List>\n      <List.Item title=\"Built-in color\" icon={{ source: Icon.Circle, tintColor: Color.Red }} />\n      <List.Item title=\"HEX\" icon={{ source: Icon.Circle, tintColor: \"#FF0000\" }} />\n      <List.Item title=\"Short HEX\" icon={{ source: Icon.Circle, tintColor: \"#F00\" }} />\n      <List.Item title=\"RGBA\" icon={{ source: Icon.Circle, tintColor: \"rgb(255, 0, 0)\" }} />\n      <List.Item title=\"RGBA Percentage\" icon={{ source: Icon.Circle, tintColor: \"rgb(255, 0, 0, 1.0)\" }} />\n      <List.Item title=\"HSL\" icon={{ source: Icon.Circle, tintColor: \"hsla(200, 20%, 33%, 0.2)\" }} />\n      <List.Item title=\"Keywords\" icon={{ source: Icon.Circle, tintColor: \"red\" }} />\n    </List>\n  );\n};\n```\n"
					},
					{
						"tag": "subcategory",
						"text": "Colors\n"
					}
				]
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 685,
						"name": "Color"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				]
			}
		},
		{
			"id": 355,
			"name": "FormValue",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "A possible form item value that will be used as an input for the submit callback of a form.",
				"tags": [
					{
						"tag": "subcategory",
						"text": "Form\n"
					}
				]
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					{
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 751,
			"name": "ImageLike",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "Union type for the supported image types.",
				"tags": [
					{
						"tag": "example",
						"text": "\n```typescript\nimport { Icon, ImageMask, List } from \"@raycast/api\";\n\nexport default () => {\n  return (\n    <List>\n      <List.Item title=\"String\" icon=\"https://raycast.com/uploads/avatar.png\" />\n      <List.Item title=\"Icon\" icon={Icon.Circle} />\n      <List.Item title=\"FileIcon\" icon={{ fileIcon: __filename }} />\n      <List.Item title=\"Image\" icon={{ source: \"https://raycast.com/uploads/avatar.png\", mask: ImageMask.Circle }} />\n    </List>\n  );\n};\n```\n"
					},
					{
						"tag": "subcategory",
						"text": "Icons & Images\n"
					}
				]
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"id": 700,
						"name": "Icon"
					},
					{
						"type": "reference",
						"id": 749,
						"name": "FileIcon"
					},
					{
						"type": "reference",
						"id": 752,
						"name": "Image"
					}
				]
			}
		},
		{
			"id": 756,
			"name": "ImageSource",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "The source of an {@link Image}. Can be either a remote URL, a local file resource, a built-in {@link Icon} or\na single emoji.",
				"tags": [
					{
						"tag": "remarks",
						"text": "\nFor consistency, it's best to use the built-in {@link Icon} in lists, the Action Panel and other places. If a\nspecific icon isn't built-in, you can reference custom ones from the `assets` folder of the extension by file name,\ne.g. `my-icon.png`. Alternatively, you can reference an absolute HTTPS url that points to an image or use an emoji.\nYou can also specify different remote or local assets for light and dark theme.\n"
					},
					{
						"tag": "example",
						"text": "\n```typescript\nimport { Icon, List } from \"@raycast/api\";\n\nexport default () => {\n  return (\n    <List>\n      <List.Item title=\"String\" icon={{ source: \"https://raycast.com/uploads/avatar.png\" }} />\n      <List.Item title=\"Icon\" icon={{ source: Icon.Circle }} />\n      <List.Item\n        title=\"Theme\"\n        icon={{\n          source: { light: \"https://raycast.com/uploads/avatar.png\", dark: \"https://raycast.com/uploads/avatar.png\" },\n        }}\n      />\n    </List>\n  );\n};\n```\n"
					},
					{
						"tag": "subcategory",
						"text": "Icons & Images\n"
					}
				]
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"id": 700,
						"name": "Icon"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 757,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 759,
									"name": "dark",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 758,
									"name": "light",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										759,
										758
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 47,
			"name": "KeyEquivalent",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "KeyEquivalent of a {@link KeyboardShortcut}"
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "a"
					},
					{
						"type": "literal",
						"value": "b"
					},
					{
						"type": "literal",
						"value": "c"
					},
					{
						"type": "literal",
						"value": "d"
					},
					{
						"type": "literal",
						"value": "e"
					},
					{
						"type": "literal",
						"value": "f"
					},
					{
						"type": "literal",
						"value": "g"
					},
					{
						"type": "literal",
						"value": "h"
					},
					{
						"type": "literal",
						"value": "i"
					},
					{
						"type": "literal",
						"value": "j"
					},
					{
						"type": "literal",
						"value": "k"
					},
					{
						"type": "literal",
						"value": "l"
					},
					{
						"type": "literal",
						"value": "m"
					},
					{
						"type": "literal",
						"value": "n"
					},
					{
						"type": "literal",
						"value": "o"
					},
					{
						"type": "literal",
						"value": "p"
					},
					{
						"type": "literal",
						"value": "q"
					},
					{
						"type": "literal",
						"value": "r"
					},
					{
						"type": "literal",
						"value": "s"
					},
					{
						"type": "literal",
						"value": "t"
					},
					{
						"type": "literal",
						"value": "u"
					},
					{
						"type": "literal",
						"value": "v"
					},
					{
						"type": "literal",
						"value": "w"
					},
					{
						"type": "literal",
						"value": "x"
					},
					{
						"type": "literal",
						"value": "y"
					},
					{
						"type": "literal",
						"value": "z"
					},
					{
						"type": "literal",
						"value": "0"
					},
					{
						"type": "literal",
						"value": "1"
					},
					{
						"type": "literal",
						"value": "2"
					},
					{
						"type": "literal",
						"value": "3"
					},
					{
						"type": "literal",
						"value": "4"
					},
					{
						"type": "literal",
						"value": "5"
					},
					{
						"type": "literal",
						"value": "6"
					},
					{
						"type": "literal",
						"value": "7"
					},
					{
						"type": "literal",
						"value": "8"
					},
					{
						"type": "literal",
						"value": "9"
					},
					{
						"type": "literal",
						"value": "."
					},
					{
						"type": "literal",
						"value": ","
					},
					{
						"type": "literal",
						"value": ";"
					},
					{
						"type": "literal",
						"value": "="
					},
					{
						"type": "literal",
						"value": "+"
					},
					{
						"type": "literal",
						"value": "-"
					},
					{
						"type": "literal",
						"value": "["
					},
					{
						"type": "literal",
						"value": "]"
					},
					{
						"type": "literal",
						"value": "{"
					},
					{
						"type": "literal",
						"value": "}"
					},
					{
						"type": "literal",
						"value": "«"
					},
					{
						"type": "literal",
						"value": "»"
					},
					{
						"type": "literal",
						"value": "("
					},
					{
						"type": "literal",
						"value": ")"
					},
					{
						"type": "literal",
						"value": "/"
					},
					{
						"type": "literal",
						"value": "\\"
					},
					{
						"type": "literal",
						"value": "'"
					},
					{
						"type": "literal",
						"value": "`"
					},
					{
						"type": "literal",
						"value": "§"
					},
					{
						"type": "literal",
						"value": "^"
					},
					{
						"type": "literal",
						"value": "@"
					},
					{
						"type": "literal",
						"value": "$"
					},
					{
						"type": "literal",
						"value": "return"
					},
					{
						"type": "literal",
						"value": "delete"
					},
					{
						"type": "literal",
						"value": "deleteForward"
					},
					{
						"type": "literal",
						"value": "tab"
					},
					{
						"type": "literal",
						"value": "arrowUp"
					},
					{
						"type": "literal",
						"value": "arrowDown"
					},
					{
						"type": "literal",
						"value": "arrowLeft"
					},
					{
						"type": "literal",
						"value": "arrowRight"
					},
					{
						"type": "literal",
						"value": "pageUp"
					},
					{
						"type": "literal",
						"value": "pageDown"
					},
					{
						"type": "literal",
						"value": "home"
					},
					{
						"type": "literal",
						"value": "end"
					},
					{
						"type": "literal",
						"value": "space"
					},
					{
						"type": "literal",
						"value": "escape"
					},
					{
						"type": "literal",
						"value": "enter"
					},
					{
						"type": "literal",
						"value": "backspace"
					}
				]
			}
		},
		{
			"id": 46,
			"name": "KeyModifier",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "Modifier of a {@link KeyboardShortcut}"
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "cmd"
					},
					{
						"type": "literal",
						"value": "ctrl"
					},
					{
						"type": "literal",
						"value": "opt"
					},
					{
						"type": "literal",
						"value": "shift"
					}
				]
			}
		},
		{
			"id": 62,
			"name": "LocalStorageValue",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "Supported storage value types.",
				"tags": [
					{
						"tag": "example",
						"text": "\n```typescript\nimport { setLocalStorageItem } from \"@raycast/api\";\n\nexport default async () => {\n  // String\n  await setLocalStorageItem(\"favorite-fruit\", \"cherry\");\n\n  // Number\n  await setLocalStorageItem(\"fruit-basket-count\", 3);\n\n  // Boolean\n  await setLocalStorageItem(\"fruit-eaten-today\", true);\n};\n```\n"
					}
				]
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "boolean"
					}
				]
			}
		},
		{
			"id": 639,
			"name": "Preferences",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "A record type holding the preferences (entered in Raycast Preferences) that have been passed to the command."
			},
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"id": 640,
						"name": "Preference"
					}
				],
				"name": "Record"
			}
		},
		{
			"id": 635,
			"name": "environment",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"comment": {
				"shortText": "Contains environment values such as the Raycast version, extension info, and paths.",
				"tags": [
					{
						"tag": "example",
						"text": "\n```typescript\nimport { environment } from \"@raycast/api\";\n\nconsole.log(`Raycast version: ${environment.raycastVersion}`);\nconsole.log(`Extension name: ${environment.extensionName}`);\nconsole.log(`Command name: ${environment.commandName}`);\nconsole.log(`Assets path: ${environment.assetsPath}`);\nconsole.log(`Support path: ${environment.supportPath}`);\nconsole.log(`Is development mode: ${environment.isDevelopment}`);\n```\n"
					}
				]
			},
			"type": {
				"type": "reference",
				"id": 628,
				"name": "Environment"
			},
			"defaultValue": "..."
		},
		{
			"id": 652,
			"name": "preferences",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"comment": {
				"shortText": "Contains the preference values (entered in Raycast Preferences) that have been passed to the command."
			},
			"type": {
				"type": "reference",
				"id": 639,
				"name": "Preferences"
			},
			"defaultValue": "..."
		},
		{
			"id": 70,
			"name": "ActionPanel",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 71,
					"name": "ActionPanel",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Represents a list of actions in the user interface, accessible through the action panel.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThe items can be grouped into sections and they can be assigned keyboard shortcuts.\nUse the menu for context-specific actions on list items or detail screens.\n\nNote that when used for the action panel, the first (ENTER) and second (CMD + ENTER) menu items have automatically assigned keyboard shortcuts.\nCustom shortcuts will work in addition to the default shortcuts.\n"
							},
							{
								"tag": "subcategory",
								"text": "Action Panel\n"
							}
						]
					},
					"parameters": [
						{
							"id": 72,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 141,
								"name": "ActionPanelProps"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 141,
								"name": "ActionPanelProps"
							}
						],
						"name": "ReactElement"
					}
				}
			]
		},
		{
			"id": 89,
			"name": "ActionPanelItem",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 90,
					"name": "ActionPanelItem",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Represents a context-specific action that can be selected in the user interface or triggered through an assigned keyboard shortcut on the respective view.",
						"tags": [
							{
								"tag": "subcategory",
								"text": "Action Panel\n"
							}
						]
					},
					"parameters": [
						{
							"id": 91,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 147,
								"name": "ActionPanelItemProps"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 147,
								"name": "ActionPanelItemProps"
							}
						],
						"name": "ReactElement"
					}
				}
			]
		},
		{
			"id": 81,
			"name": "ActionPanelSection",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 82,
					"name": "ActionPanelSection",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Visually separated group of items.\nUse sections to group related menu items together.",
						"tags": [
							{
								"tag": "subcategory",
								"text": "Action Panel\n"
							}
						]
					},
					"parameters": [
						{
							"id": 83,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 144,
								"name": "ActionPanelSectionProps"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 144,
								"name": "ActionPanelSectionProps"
							}
						],
						"name": "ReactElement"
					}
				}
			]
		},
		{
			"id": 116,
			"name": "ActionPanelSubmenu",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 117,
					"name": "ActionPanelSubmenu",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Represents a context-specific action that can be selected in the user interface or triggered through an assigned keyboard shortcut on the respective view.",
						"tags": [
							{
								"tag": "subcategory",
								"text": "Action Panel\n"
							}
						]
					},
					"parameters": [
						{
							"id": 118,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 154,
								"name": "ActionPanelSubmenuProps"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 147,
								"name": "ActionPanelItemProps"
							}
						],
						"name": "ReactElement"
					}
				}
			]
		},
		{
			"id": 533,
			"name": "CopyToClipboardAction",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 534,
					"name": "CopyToClipboardAction",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Action that copies the content to the clipboard.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThe main window is closed and a HUD is shown after the content was copied to the clipboard.\n"
							},
							{
								"tag": "subcategory",
								"text": "Actions\n"
							}
						]
					},
					"parameters": [
						{
							"id": 535,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 536,
								"name": "CopyToClipboardActionProps"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 536,
								"name": "CopyToClipboardActionProps"
							}
						],
						"name": "ReactElement"
					}
				}
			]
		},
		{
			"id": 160,
			"name": "Detail",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 161,
					"name": "Detail",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Renders a markdown (CommonMark) string. Typically used when navigating from a list or as standalone view.",
						"tags": [
							{
								"tag": "subcategory",
								"text": "Detail\n"
							}
						]
					},
					"parameters": [
						{
							"id": 162,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 170,
								"name": "DetailProps"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 170,
								"name": "DetailProps"
							}
						],
						"name": "ReactElement"
					}
				}
			]
		},
		{
			"id": 176,
			"name": "Form",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 177,
					"name": "Form",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Shows a list of form items such as {@link FormViewTextField}, {@link FormViewCheckbox} or {@link FormViewDropdown}.",
						"tags": [
							{
								"tag": "subcategory",
								"text": "Form\n"
							}
						]
					},
					"typeParameter": [
						{
							"id": 178,
							"name": "Values",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 356,
								"name": "FormValues"
							},
							"default": {
								"type": "reference",
								"id": 356,
								"name": "FormValues"
							}
						}
					],
					"parameters": [
						{
							"id": 179,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 359,
								"typeArguments": [
									{
										"type": "reference",
										"name": "Values"
									}
								],
								"name": "FormProps"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 359,
								"typeArguments": [
									{
										"type": "reference",
										"name": "Values"
									}
								],
								"name": "FormProps"
							}
						],
						"name": "ReactElement"
					}
				}
			]
		},
		{
			"id": 235,
			"name": "FormCheckbox",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 236,
					"name": "FormCheckbox",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "A form item with a checkbox.",
						"tags": [
							{
								"tag": "subcategory",
								"text": "Form\n"
							}
						]
					},
					"parameters": [
						{
							"id": 237,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 399,
								"name": "FormCheckboxProps"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 399,
								"name": "FormCheckboxProps"
							}
						],
						"name": "ReactElement"
					}
				}
			]
		},
		{
			"id": 252,
			"name": "FormDatePicker",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 253,
					"name": "FormDatePicker",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "A form item with a date picker.",
						"tags": [
							{
								"tag": "subcategory",
								"text": "Form\n"
							}
						]
					},
					"parameters": [
						{
							"id": 254,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 409,
								"name": "FormDatePickerProps"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 409,
								"name": "FormDatePickerProps"
							}
						],
						"name": "ReactElement"
					}
				}
			]
		},
		{
			"id": 273,
			"name": "FormDropdown",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 274,
					"name": "FormDropdown",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "A form item with a dropdown menu.",
						"tags": [
							{
								"tag": "subcategory",
								"text": "Form\n"
							}
						]
					},
					"parameters": [
						{
							"id": 275,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 420,
								"name": "FormDropdownProps"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 420,
								"name": "FormDropdownProps"
							}
						],
						"name": "ReactElement"
					}
				}
			]
		},
		{
			"id": 299,
			"name": "FormDropdownItem",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 300,
					"name": "FormDropdownItem",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Represents a context-specific action that can be selected in the user interface or triggered through an assigned keyboard shortcut on the respective view.",
						"tags": [
							{
								"tag": "subcategory",
								"text": "Form\n"
							}
						]
					},
					"parameters": [
						{
							"id": 301,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 433,
								"name": "FormDropdownItemProps"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 433,
								"name": "FormDropdownItemProps"
							}
						],
						"name": "ReactElement"
					}
				}
			]
		},
		{
			"id": 291,
			"name": "FormDropdownSection",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 292,
					"name": "FormDropdownSection",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Visually separated group of items.\nUse sections to group related menu items together.",
						"tags": [
							{
								"tag": "subcategory",
								"text": "Form\n"
							}
						]
					},
					"parameters": [
						{
							"id": 293,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 430,
								"name": "FormDropdownSectionProps"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 430,
								"name": "FormDropdownSectionProps"
							}
						],
						"name": "ReactElement"
					}
				}
			]
		},
		{
			"id": 269,
			"name": "FormSeparator",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 270,
					"name": "FormSeparator",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "A form item that shows a separator line.\nUse for grouping and visually separating form items.",
						"tags": [
							{
								"tag": "subcategory",
								"text": "Form\n"
							}
						]
					},
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 419,
								"name": "FormSeparatorProps"
							}
						],
						"name": "ReactElement"
					}
				}
			]
		},
		{
			"id": 318,
			"name": "FormTagPicker",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 319,
					"name": "FormTagPicker",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "A form item with a tag picker that allows the user to select multiple items.",
						"tags": [
							{
								"tag": "subcategory",
								"text": "Form\n"
							}
						]
					},
					"parameters": [
						{
							"id": 320,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 437,
								"name": "FormTagPickerProps"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 437,
								"name": "FormTagPickerProps"
							}
						],
						"name": "ReactElement"
					}
				}
			]
		},
		{
			"id": 336,
			"name": "FormTagPickerItem",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 337,
					"name": "FormTagPickerItem",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "A tag picker item in a {@link FormTagPicker}.",
						"tags": [
							{
								"tag": "subcategory",
								"text": "Form\n"
							}
						]
					},
					"parameters": [
						{
							"id": 338,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 448,
								"name": "FormTagPickerItemProps"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 448,
								"name": "FormTagPickerItemProps"
							}
						],
						"name": "ReactElement"
					}
				}
			]
		},
		{
			"id": 218,
			"name": "FormTextArea",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 219,
					"name": "FormTextArea",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "A form item with a text area for input.\nThe item supports multiline text entry.",
						"tags": [
							{
								"tag": "subcategory",
								"text": "Form\n"
							}
						]
					},
					"parameters": [
						{
							"id": 220,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 389,
								"name": "FormTextAreaProps"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 389,
								"name": "FormTextAreaProps"
							}
						],
						"name": "ReactElement"
					}
				}
			]
		},
		{
			"id": 201,
			"name": "FormTextField",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 202,
					"name": "FormTextField",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "A form item with a text field for input.",
						"tags": [
							{
								"tag": "subcategory",
								"text": "Form\n"
							}
						]
					},
					"parameters": [
						{
							"id": 203,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 379,
								"name": "FormTextFieldProps"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 379,
								"name": "FormTextFieldProps"
							}
						],
						"name": "ReactElement"
					}
				}
			]
		},
		{
			"id": 452,
			"name": "List",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 453,
					"name": "List",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Shows sections and items with built-in or custom filtering through an optional search bar.",
						"tags": [
							{
								"tag": "subcategory",
								"text": "List\n"
							}
						]
					},
					"parameters": [
						{
							"id": 454,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 504,
								"name": "ListProps"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 504,
								"name": "ListProps"
							}
						],
						"name": "ReactElement"
					}
				}
			]
		},
		{
			"id": 482,
			"name": "ListItem",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 483,
					"name": "ListItem",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Represents an item within a list section.",
						"tags": [
							{
								"tag": "subcategory",
								"text": "List\n"
							}
						]
					},
					"parameters": [
						{
							"id": 484,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 523,
								"name": "ListItemProps"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 523,
								"name": "ListItemProps"
							}
						],
						"name": "ReactElement"
					}
				}
			]
		},
		{
			"id": 472,
			"name": "ListSection",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 473,
					"name": "ListSection",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Visually separated group of list items. Use sections to group related list items together.",
						"tags": [
							{
								"tag": "subcategory",
								"text": "List\n"
							}
						]
					},
					"parameters": [
						{
							"id": 474,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 518,
								"name": "ListSectionProps"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 518,
								"name": "ListSectionProps"
							}
						],
						"name": "ReactElement"
					}
				}
			]
		},
		{
			"id": 544,
			"name": "OpenAction",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 545,
					"name": "OpenAction",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "An action to open a file or folder with a specific application, just as if you had double-clicked the\nfile's icon.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThe main window is closed, after the file was opened.\n"
							},
							{
								"tag": "subcategory",
								"text": "Actions\n"
							}
						]
					},
					"parameters": [
						{
							"id": 546,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 547,
								"name": "OpenActionProps"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 547,
								"name": "OpenActionProps"
							}
						],
						"name": "ReactElement"
					}
				}
			]
		},
		{
			"id": 556,
			"name": "OpenInBrowserAction",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 557,
					"name": "OpenInBrowserAction",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Action that opens a URL in the default browser..",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThe main window is closed, after the URL was opened in the browser.\n"
							},
							{
								"tag": "subcategory",
								"text": "Actions\n"
							}
						]
					},
					"parameters": [
						{
							"id": 558,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 559,
								"name": "OpenInBrowserActionProps"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 559,
								"name": "OpenInBrowserActionProps"
							}
						],
						"name": "ReactElement"
					}
				}
			]
		},
		{
			"id": 567,
			"name": "OpenWithAction",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 568,
					"name": "OpenWithAction",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "An action to open a file or folder with a specific application.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThe action opens a sub-menu with all applications that can open the file or folder.\nThe main window is closed after the file was opened in the specified application.\n"
							},
							{
								"tag": "subcategory",
								"text": "Actions\n"
							}
						]
					},
					"parameters": [
						{
							"id": 569,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 570,
								"name": "OpenWithActionProps"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 570,
								"name": "OpenWithActionProps"
							}
						],
						"name": "ReactElement"
					}
				}
			]
		},
		{
			"id": 578,
			"name": "PasteAction",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 579,
					"name": "PasteAction",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Action that pastes the content to the front-most applications.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThe main window is closed, after the content was pasted to the front-most application.\n"
							},
							{
								"tag": "subcategory",
								"text": "Actions\n"
							}
						]
					},
					"parameters": [
						{
							"id": 580,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 581,
								"name": "PasteActionProps"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 581,
								"name": "PasteActionProps"
							}
						],
						"name": "ReactElement"
					}
				}
			]
		},
		{
			"id": 589,
			"name": "PushAction",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 590,
					"name": "PushAction",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Action that allows to push a new view to the navigation stack.",
						"tags": [
							{
								"tag": "subcategory",
								"text": "Actions\n"
							}
						]
					},
					"parameters": [
						{
							"id": 591,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 592,
								"name": "PushActionProps"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 592,
								"name": "PushActionProps"
							}
						],
						"name": "ReactElement"
					}
				}
			]
		},
		{
			"id": 599,
			"name": "ShowInFinderAction",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 600,
					"name": "ShowInFinderAction",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Action that shows a file or folder in the Finder.",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThe main window is closed, after the file or folder was revealed in the Finder.\n"
							},
							{
								"tag": "subcategory",
								"text": "Actions\n"
							}
						]
					},
					"parameters": [
						{
							"id": 601,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 602,
								"name": "ShowInFinderActionProps"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 602,
								"name": "ShowInFinderActionProps"
							}
						],
						"name": "ReactElement"
					}
				}
			]
		},
		{
			"id": 610,
			"name": "TrashAction",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 611,
					"name": "TrashAction",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Action that moves a file or folder to the Trash.",
						"tags": [
							{
								"tag": "subcategory",
								"text": "Actions\n"
							}
						]
					},
					"parameters": [
						{
							"id": 612,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 613,
								"name": "TrashActionProps"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 613,
								"name": "TrashActionProps"
							}
						],
						"name": "ReactElement"
					}
				}
			]
		},
		{
			"id": 48,
			"name": "allLocalStorageItems",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 49,
					"name": "allLocalStorageItems",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Retrieve all stored values in the local storage of a command.",
						"returns": "A promise that resolves with a record of all stored values.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n```typescript\nimport { allLocalStorageItems } from \"@raycast/api\";\n\nexport default async () => {\n  const items = await allLocalStorageItems();\n  console.log(`Local storage item count: ${Object.entries(items).length}`);\n};\n```\n"
							}
						]
					},
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 62,
										"name": "LocalStorageValue"
									}
								],
								"name": "Record"
							}
						],
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 35,
			"name": "clearClipboard",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 36,
					"name": "clearClipboard",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Clears the current clipboard contents.",
						"returns": "A promise that resolves when the clipboard is cleared.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n```typescript\nimport { clearClipboard } from \"@raycast/api\";\n\nexport default async () => {\n  await clearClipboard();\n};\n```\n"
							}
						]
					},
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						],
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 60,
			"name": "clearLocalStorage",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 61,
					"name": "clearLocalStorage",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Removes all stored values.",
						"returns": "A promise that resolves when all values were removed.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n```typescript\nimport { clearLocalStorage } from \"@raycast/api\";\n\nexport default async () => {\n  await clearLocalStorage();\n};\n```\n"
							}
						]
					},
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						],
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 11,
			"name": "clearSearchBar",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 12,
					"name": "clearSearchBar",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Clear the text in the search bar.",
						"returns": "A promise that resolves when the search bar is cleared.\n",
						"tags": [
							{
								"tag": "subcategory",
								"text": "Window & Search Bar\n"
							}
						]
					},
					"parameters": [
						{
							"id": 13,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"text": "Can be used to force scrolling to the top. Defaults to scrolling to the top after the\nthe search bar was cleared."
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 14,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 15,
											"name": "forceScrollToTop",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												15
											]
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						],
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 1,
			"name": "closeMainWindow",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 2,
					"name": "closeMainWindow",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Closes the main Raycast window.",
						"returns": "A promise that resolves when the main window is closed.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n```typescript\nimport { closeMainWindow } from \"@raycast/api\";\nimport { setTimeout } from \"timers/promises\";\n\nexport default async () => {\n  await setTimeout(1000);\n  await closeMainWindow({ clearRootSearch: true });\n};\n```\n"
							},
							{
								"tag": "subcategory",
								"text": "Window & Search Bar\n"
							}
						]
					},
					"parameters": [
						{
							"id": 3,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"text": "Can be used to clear the root search. Defaults to not clearing the root search after\nthe window was closed."
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 5,
											"name": "clearRootSearch",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												5
											]
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						],
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 32,
			"name": "copyTextToClipboard",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 33,
					"name": "copyTextToClipboard",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Copies text to the clipboard.",
						"returns": "A promise that resolves when the text got copied to the clipboard.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n```typescript\nimport { copyTextToClipboard } from \"@raycast/api\";\n\nexport default async () => {\n  await copyTextToClipboard(\"https://raycast.com\");\n};\n```\n"
							}
						]
					},
					"parameters": [
						{
							"id": 34,
							"name": "text",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						],
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 22,
			"name": "getApplications",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 23,
					"name": "getApplications",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Returns all applications that can open the file.",
						"returns": "An array of {@link Application},\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n```typescript\nimport { getApplications } from \"@raycast/api\";\n\nexport default async () => {\n  const installedApplications = await getApplications();\n  console.log(\"The following applications are installed on your Mac:\");\n  console.log(installedApplications.map((a) => a.name).join(\", \"));\n};\n```\n"
							},
							{
								"tag": "subcategory",
								"text": "System\n"
							}
						]
					},
					"parameters": [
						{
							"id": 24,
							"name": "path",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"text": "The path of the file or folder to get the applications for. If no path is specified, all installed applications are returned."
							},
							"type": {
								"type": "reference",
								"name": "PathLike"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 28,
									"name": "Application"
								}
							}
						],
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 25,
			"name": "getDefaultApplication",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 26,
					"name": "getDefaultApplication",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Returns the default application that the file would be opened with.",
						"returns": "The default {@link Application} that would open the file. Throws an error if no application was found.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n```typescript\nimport { getDefaultApplication } from \"@raycast/api\";\n\nexport default async () => {\n  const defaultApplication = await getDefaultApplication(__filename);\n  console.log(`Default application for JavaScript is: ${defaultApplication.name}`);\n};\n```\n"
							},
							{
								"tag": "subcategory",
								"text": "System\n"
							}
						]
					},
					"parameters": [
						{
							"id": 27,
							"name": "path",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "The path of the file or folder to get the default application for."
							},
							"type": {
								"type": "reference",
								"name": "PathLike"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 28,
								"name": "Application"
							}
						],
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 50,
			"name": "getLocalStorageItem",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 51,
					"name": "getLocalStorageItem",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Retrieve the stored value for the given key.",
						"returns": "A promise that resolves with the the stored value for the given key. If the key does not exist, `undefined` is returned.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n```typescript\nimport { getLocalStorageItem } from \"@raycast/api\";\n\nexport default async () => {\n  const item = await getLocalStorageItem(\"favorite-fruit\");\n  console.log(item);\n};\n```\n"
							}
						]
					},
					"parameters": [
						{
							"id": 52,
							"name": "key",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "The key you want to retrieve the value of."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 62,
										"name": "LocalStorageValue"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						],
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 636,
			"name": "getPreferenceValues",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 637,
					"name": "getPreferenceValues",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Generically typed convenience function that returns a {@link preferences} object where each preference name is mapped to its value.\nNote that the values fall back to defined default values.",
						"tags": [
							{
								"tag": "example",
								"text": "\n```typescript\nimport { getPreferenceValues } from \"@raycast/api\";\n\ninterface Preferences {\n  name: string;\n  bodyWeight?: string;\n  bodyHeight?: string;\n}\n\nexport default async () => {\n  const preferences: Preferences = getPreferenceValues();\n  console.log(preferences);\n};\n```\n"
							}
						]
					},
					"typeParameter": [
						{
							"id": 638,
							"name": "Values",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 653,
								"name": "PreferenceValues"
							},
							"default": {
								"type": "reference",
								"id": 653,
								"name": "PreferenceValues"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Values"
					}
				}
			]
		},
		{
			"id": 40,
			"name": "getSelectedText",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 41,
					"name": "getSelectedText",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Gets the selected text of the frontmost application.",
						"returns": "Returns a promise that resolves with the selected text.\n",
						"tags": [
							{
								"tag": "throws",
								"text": "An error when no text is selected in the frontmost application."
							},
							{
								"tag": "example",
								"text": "\n```typescript\nimport { getSelectedText, pasteText, showToast, ToastStyle } from \"@raycast/api\";\n\nexport default async () => {\n  try {\n    const selectedText = await getSelectedText();\n    const transformedText = selectedText.toUpperCase();\n    await pasteText(transformedText);\n  } catch (error) {\n    await showToast(ToastStyle.Failure, \"Cannot transform text\", String(error));\n  }\n};\n```\n"
							}
						]
					},
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 37,
			"name": "pasteText",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 38,
					"name": "pasteText",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Pastes text to the current selection of the frontmost application.",
						"returns": "A promise that resolves when the text got pasted.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n```typescript\nimport { pasteText } from \"@raycast/api\";\n\nexport default async () => {\n  await pasteText(\"I really like Raycast's API\");\n};\n```\n"
							}
						]
					},
					"parameters": [
						{
							"id": 39,
							"name": "text",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "The text contents to insert at the cursor."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						],
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 6,
			"name": "popToRoot",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 7,
					"name": "popToRoot",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Pops the navigation stack back to root search.",
						"returns": "A promise that resolves when Raycast popped to root.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n```typescript\nimport { Detail, popToRoot } from \"@raycast/api\";\nimport { useEffect } from \"react\";\nimport { setTimeout } from \"timers\";\n\nexport default function Command() {\n  useEffect(() => {\n    setTimeout(() => {\n      popToRoot({ clearSearchBar: true });\n    }, 3000);\n  }, []);\n\n  return <Detail markdown=\"See you soon 👋\" />;\n}\n```\n"
							},
							{
								"tag": "subcategory",
								"text": "Window & Search Bar\n"
							}
						]
					},
					"parameters": [
						{
							"id": 8,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"text": "Can be used to clear the search bar. Defaults to clearing the search bar after popped to root."
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 9,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 10,
											"name": "clearSearchBar",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												10
											]
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						],
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 802,
			"name": "randomId",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 803,
					"name": "randomId",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Generate secure URL-friendly unique ID.",
						"text": "By default, the ID will have 21 symbols to have a collision probability\nsimilar to UUID v4.\n",
						"returns": "A random string.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n```typescript\nimport { pasteText, randomId } from \"@raycast/api\";\n\nexport default async () => {\n  const id = randomId();\n  await pasteText(id);\n};\n```\n"
							},
							{
								"tag": "subcategory",
								"text": "ID\n"
							}
						]
					},
					"parameters": [
						{
							"id": 804,
							"name": "size",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"text": "Size of the ID. The default size is 21."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 57,
			"name": "removeLocalStorageItem",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 58,
					"name": "removeLocalStorageItem",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Removes the stored value for the given key.",
						"returns": "A promise that resolves when the value was removed.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n```typescript\nimport { removeLocalStorageItem } from \"@raycast/api\";\n\nexport default async () => {\n  await removeLocalStorageItem(\"favorite-fruit\");\n};\n```\n"
							}
						]
					},
					"parameters": [
						{
							"id": 59,
							"name": "key",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "The key you want to remove the value of."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						],
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 676,
			"name": "render",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 677,
					"name": "render",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Takes a React Components and renders it in Raycast for command types that show a `view`.",
						"tags": [
							{
								"tag": "example",
								"text": "\n```typescript\nimport { Detail } from \"@raycast/api\"\nconst Command = () => <Detail markdown=\"Hello World\" />\nrender(<Command />)\n```\n"
							},
							{
								"tag": "subcategory",
								"text": "Rendering\n"
							}
						]
					},
					"parameters": [
						{
							"id": 678,
							"name": "nodeToRender",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "ReactNode"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 53,
			"name": "setLocalStorageItem",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 54,
					"name": "setLocalStorageItem",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Stores a value for the given key.",
						"returns": "A promise that resolves when the value was stored.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n```typescript\nimport { setLocalStorageItem } from \"@raycast/api\";\n\nexport default async () => {\n  await setLocalStorageItem(\"favorite-fruit\", \"cherry\");\n};\n```\n"
							}
						]
					},
					"parameters": [
						{
							"id": 55,
							"name": "key",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "The key you want to create or update the value of."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 56,
							"name": "value",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "The value you want to create or update for the given key."
							},
							"type": {
								"type": "reference",
								"id": 62,
								"name": "LocalStorageValue"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						],
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 768,
			"name": "showHUD",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 769,
					"name": "showHUD",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "A HUD will automatically hide the main window and show a compact Toast at the bottom of the screen.",
						"returns": "A promise that resolves when the HUD is shown.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n```typescript\nimport { showHUD } from \"@raycast/api\";\n\nexport default async () => {\n  await showHUD(\"Hey there 👋\");\n};\n```\n"
							},
							{
								"tag": "subcategory",
								"text": "Toast\n"
							}
						]
					},
					"parameters": [
						{
							"id": 770,
							"name": "title",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "The title that will be displayed for the HUD."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						],
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 16,
			"name": "showInFinder",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 17,
					"name": "showInFinder",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Shows a file or directory in the Finder.",
						"returns": "A promise that resolves when item is revealed in the Finder.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n```typescript\nimport { showInFinder } from \"@raycast/api\"\nimport { homedir } from \"os\"\nshowInFinder(homedir(), \"Downloads\")\n```\n"
							},
							{
								"tag": "subcategory",
								"text": "System\n\n"
							}
						]
					},
					"parameters": [
						{
							"id": 18,
							"name": "path",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "The path to show in the Finder."
							},
							"type": {
								"type": "reference",
								"name": "PathLike"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						],
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 763,
			"name": "showToast",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 764,
					"name": "showToast",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Creates and shows a Toast with the the given style, title, and message.",
						"returns": "A promise that resolves with the shown toast. The toast can be used to change or hide it.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n```typescript\nimport { showToast, ToastStyle } from \"@raycast/api\";\n\nexport default async () => {\n  const success = false;\n\n  if (success) {\n    await showToast(ToastStyle.Success, \"Dinner is ready\", \"Pizza margherita\");\n  } else {\n    await showToast(ToastStyle.Failure, \"Dinner isn't ready\", \"Pizza dropped on the floor\");\n  }\n};\n```\n"
							},
							{
								"tag": "subcategory",
								"text": "Toast\n"
							}
						]
					},
					"parameters": [
						{
							"id": 765,
							"name": "style",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "The visual style of the Toast."
							},
							"type": {
								"type": "reference",
								"id": 798,
								"name": "ToastStyle"
							}
						},
						{
							"id": 766,
							"name": "title",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "The title that will be displayed in the Toast."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 767,
							"name": "message",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"text": "The message that will be displayed in the Toast."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 771,
								"name": "Toast"
							}
						],
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 19,
			"name": "trash",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 20,
					"name": "trash",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Moves a file or director to the Trash.",
						"returns": "A promise that resolves when all files are moved to the trash.\n",
						"tags": [
							{
								"tag": "example",
								"text": "\n```typescript\nimport { trash } from \"@raycast/api\";\nimport { writeFile } from \"fs/promises\";\nimport { homedir } from \"os\";\n\nexport default async () => {\n  const file = `${homedir()}/Desktop/yolo.txt`;\n  await writeFile(file, \"I will be deleted soon!\");\n  await trash(file);\n};\n```\n"
							},
							{
								"tag": "subcategory",
								"text": "System\n"
							}
						]
					},
					"parameters": [
						{
							"id": 21,
							"name": "path",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "PathLike"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "PathLike"
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						],
						"name": "Promise"
					}
				}
			]
		},
		{
			"id": 656,
			"name": "useActionPanel",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 657,
					"name": "useActionPanel",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "A hook that lets you update the global Action Panel.",
						"returns": "A {@link ActionPanelActions} object with an {@link ActionPanelHook.update} function.\nUse the function to update the global Action Panel.\n",
						"tags": [
							{
								"tag": "subcategory",
								"text": "Action Panel\n"
							}
						]
					},
					"type": {
						"type": "reference",
						"id": 658,
						"name": "ActionPanelState"
					}
				}
			]
		},
		{
			"id": 662,
			"name": "useId",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 663,
					"name": "useId",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Generates a memoized random ID.",
						"returns": "The an string ID that is either the `defaultId` if provided, or a randomly generated ID with\nthe `generateId` function.\n",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThe generated ID is preserved across renders. It's used internally to generate fallback ID's\nfor {@link List.Section} or {@link List.Item}. The generated ID is saved as React `ref` and\nwon't change unless the React component is unmounted.\n"
							},
							{
								"tag": "example",
								"text": "\n```typescript\nimport { Detail, useId } from \"@raycast/api\";\n\nexport default function Command() {\n  const id = useId();\n  console.log(id);\n  return <Detail key={id} markdown=\"I remember you 🧠\" />;\n}\n```\n"
							},
							{
								"tag": "subcategory",
								"text": "Utilities\n"
							}
						]
					},
					"parameters": [
						{
							"id": 664,
							"name": "defaultId",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"text": "The ID that is returned by default."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 665,
							"name": "generateId",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "A function that is used to generate a random ID. Uses {@link randomId} by default."
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 666,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 667,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							},
							"defaultValue": "..."
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 668,
			"name": "useNavigation",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"signatures": [
				{
					"id": 669,
					"name": "useNavigation",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "A hook that lets you push and pop view components in the navigation stack.",
						"returns": "A {@link Navigation} object with {@link Navigation.push} and {@link Navigation.pop} functions.\nUse the functions to alter the navigation stack.\n",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nMost likely you won't use this hook too often. To push a new component, use the {@link PushAction}.\nWhen a user presses `ESC`, we automatically push to the previous component.\n"
							},
							{
								"tag": "example",
								"text": "\n```typescript\nimport { ActionPanel, Detail, useNavigation } from \"@raycast/api\";\n\nfunction Ping() {\n  const { push } = useNavigation();\n\n  return (\n    <Detail markdown=\"Ping\">\n      <ActionPanel>\n        <ActionPanel.Item title=\"Push\" onAction={() => push(<Pong />)} />\n      </ActionPanel>\n    </Detail>\n  );\n}\n\nfunction Pong() {\n  const { pop } = useNavigation();\n\n  return (\n    <Detail markdown=\"Pong\">\n      <ActionPanel>\n        <ActionPanel.Item title=\"Pop\" onAction={pop} />\n      </ActionPanel>\n    </Detail>\n  );\n}\n\nexport default function Command() {\n  return <Ping />;\n}\n```\n"
							},
							{
								"tag": "subcategory",
								"text": "Navigation\n"
							}
						]
					},
					"type": {
						"type": "reference",
						"id": 670,
						"name": "Navigation"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Namespaces",
			"kind": 2,
			"children": [
				73,
				92,
				84,
				119,
				163,
				180,
				238,
				255,
				276,
				302,
				294,
				271,
				321,
				339,
				221,
				204,
				68,
				455,
				485,
				475
			]
		},
		{
			"title": "Enumerations",
			"kind": 4,
			"children": [
				685,
				700,
				760,
				798
			]
		},
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				771
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				147,
				141,
				144,
				658,
				154,
				28,
				536,
				170,
				628,
				749,
				399,
				409,
				433,
				420,
				430,
				369,
				359,
				419,
				448,
				437,
				389,
				379,
				356,
				752,
				42,
				523,
				504,
				518,
				670,
				547,
				559,
				570,
				581,
				640,
				653,
				592,
				602,
				794,
				613
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				139,
				140,
				696,
				355,
				751,
				756,
				47,
				46,
				62,
				639
			]
		},
		{
			"title": "Variables",
			"kind": 32,
			"children": [
				635,
				652
			]
		},
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				70,
				89,
				81,
				116,
				533,
				160,
				176,
				235,
				252,
				273,
				299,
				291,
				269,
				318,
				336,
				218,
				201,
				452,
				482,
				472,
				544,
				556,
				567,
				578,
				589,
				599,
				610,
				48,
				35,
				60,
				11,
				1,
				32,
				22,
				25,
				50,
				636,
				40,
				37,
				6,
				802,
				57,
				676,
				53,
				768,
				16,
				763,
				19,
				656,
				662,
				668
			]
		}
	],
	"categories": [
		{
			"title": "User Interface",
			"children": [
				685,
				700,
				760,
				798,
				771,
				147,
				141,
				144,
				658,
				154,
				536,
				170,
				749,
				399,
				409,
				433,
				420,
				430,
				369,
				359,
				419,
				448,
				437,
				389,
				379,
				356,
				752,
				523,
				504,
				518,
				670,
				547,
				559,
				570,
				581,
				592,
				602,
				794,
				613,
				139,
				140,
				696,
				355,
				751,
				756,
				70,
				89,
				81,
				116,
				533,
				160,
				176,
				235,
				252,
				273,
				299,
				291,
				269,
				318,
				336,
				218,
				201,
				452,
				482,
				472,
				544,
				556,
				567,
				578,
				589,
				599,
				610,
				11,
				1,
				6,
				676,
				768,
				763,
				656,
				662,
				668
			]
		},
		{
			"title": "Keyboard",
			"children": [
				42,
				47,
				46
			]
		},
		{
			"title": "Clipboard",
			"children": [
				35,
				32,
				40,
				37
			]
		},
		{
			"title": "Storage",
			"children": [
				62,
				48,
				60,
				50,
				57,
				53
			]
		},
		{
			"title": "Environment",
			"children": [
				628,
				635
			]
		},
		{
			"title": "Other",
			"children": [
				73,
				92,
				84,
				119,
				163,
				180,
				238,
				255,
				276,
				302,
				294,
				271,
				321,
				339,
				221,
				204,
				68,
				455,
				485,
				475
			]
		},
		{
			"title": "Preferences",
			"children": [
				640,
				653,
				639,
				652,
				636
			]
		},
		{
			"title": "Utilities",
			"children": [
				28,
				22,
				25,
				802,
				16,
				19
			]
		}
	]
}